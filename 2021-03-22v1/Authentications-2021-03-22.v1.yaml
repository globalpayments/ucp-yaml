openapi: 3.0.3
info:
  version: 2021 03 22
  title: Authentications
  description: Authentications represent the attempt to validate the payer and reduce the risk of fraud when transaction is in processing.
  contact:
    name: API Integrations
    url: 'https://developer.globalpay.com/?gp-api=true'
    email: api.integrations@globalpay.com
servers:
  - url: 'https://apis.sandbox.globalpay.com/ucp'
    description: Sandbox Environment
  - url: 'https://apis.globalpay.com/ucp'
    description: Production Environment
paths:
  /authentications:
    post:
      tags:
        - Check Availability
      summary: Start the authentication process by confirming the available mechanisms to authenticate the payer based on a payment method.
      description: Start the authentication process by confirming the available mechanisms to authenticate the payer based on a payment method.
      operationId: check3DSAvailability
      parameters:
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-GP-Idempotency'
        - $ref: '#/components/parameters/X-GP-Version'
        - $ref: '#/components/parameters/Content-type'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_request'
            examples:
              Check Availability - 3DS 2 Challenge:
                value:
                  account_name: Transaction_Processing
                  reference: 3ds2_ref1
                  channel: CNP
                  amount: '5089'
                  currency: EUR
                  country: FR
                  payment_method:
                    card:
                      number: '4012001038488884'
                      expiry_month: '12'
                      expiry_year: '25'
                  notifications:
                    challenge_return_url: 'https://ensi808o85za.x.pipedream.net/'
                    three_ds_method_return_url: 'https://ensi808o85za.x.pipedream.net/'
              Check Availability 3DS 2 Frictionless:
                value:
                  account_name: Transaction_Processing
                  reference: 3ds1_ref2
                  channel: CNP
                  amount: '5089'
                  currency: EUR
                  country: FR
                  payment_method:
                    card:
                      number: '4263970000005262'
                      expiry_month: '12'
                      expiry_year: '25'
                  notifications:
                    challenge_return_url: 'https://ensi808o85za.x.pipedream.net/'
                    three_ds_method_return_url: 'https://ensi808o85za.x.pipedream.net/'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/create_response'
        
        '400':
          $ref: '#/components/responses/RequestInvalid_400'
        '401':
          $ref: '#/components/responses/AuthenticationInvalid_401'
        '403':
          $ref: '#/components/responses/NotAuthorized_403'
        '404':
          description: Resource Not Found
        '500':
          $ref: '#/components/responses/ServerError_500'
        '501':
          $ref: '#/components/responses/UnknownServerError_501'
        '502':
          $ref: '#/components/responses/UnknownPlatformError_502'
        '504':
          $ref: '#/components/responses/ServerTimeout_504'
      callbacks:
        Challenge Return Notification:
          '{$request.body#/notifications.challenge_return_url}':
            post:
              description: The endpoint which will receive 3DS challenge return notification messages. These notifications indicate that the payer has completed the 3DS authentication challenge and the result of the challenge can be obtained.
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/3ds_callback'
              responses:
                '200':
                  description: OK
      security:
        - bearerAuth: []
      servers:
        - url: 'https://apis.sandbox.globalpay.com/ucp'
          description: Sandbox Environment
        - url: 'https://apis.globalpay.com/ucp'
          description: Production Environment
    get:
      tags:
        - Get List of Authentications
      summary: Get List of Authentications
      description: Return a list of Authentication Responses.
      operationId: get-authentications
      parameters:
        - name: to_time_created
          in: query
          schema:
            $ref: '#/components/schemas/to_time_created'
        - name: from_time_created
          in: query
          schema:
            $ref: '#/components/schemas/from_time_created'
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        - name: amount
          in: query
          schema:
            $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        - name: country
          in: query
          schema:
            $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        - name: currency
          in: query
          schema:
            $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        - name: source
          in: query
          schema:
            $ref: '#/components/schemas/source_AUTHENTICATIONS.source'
        - name: three_ds.ds_trans_ref
          in: query
          schema:
            $ref: '#/components/schemas/ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref'
        - name: three_ds.server_trans_ref
          in: query
          schema:
            $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
        - name: three_ds.liability_shift
          in: query
          schema:
            $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
        - name: three_ds.authentication_value
          in: query
          schema:
            $ref: '#/components/schemas/authentication_value_AUTHENTICATIONS.three_ds.authentication_value'
        - name: three_ds.eci
          in: query
          schema:
            $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
        - name: three_ds.message_version
          in: query
          schema:
            $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Content-type'
        - $ref: '#/components/parameters/X-GP-Version'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/order_by'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/list_response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
        '502':
          description: Bad Gateway
        '504':
          description: Gateway Timeout
      security:
        - bearerAuth: []
      servers:
        - url: 'https://apis.sandbox.globalpay.com/ucp'
          description: Sandbox Environment
        - url: 'https://apis.globalpay.com/ucp'
          description: Production Environment
  '/authentications/{id}/initiate':
    post:
      tags:
        - Initiate
      summary: 'For 3DS 2, submit data including the billing and shipping details of the payer, at least one phone number, the device data, transaction details, outcome from the ACS Method URL if it took place and a link to the merchant''s About or Contact page.'
      description: 'For 3DS 2, submit data including the billing and shipping details of the payer, at least one phone number, the device data, transaction details, outcome from the ACS Method URL if it took place and a link to the merchant''s About or Contact page.'
      operationId: initiate3DS
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-GP-Idempotency'
        - $ref: '#/components/parameters/X-GP-Version'
        - $ref: '#/components/parameters/Content-type'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initiate_request'
            examples:
              Initiate - 3DS 2 Challenge:
                value:
                  method_url_completion_status: 'YES'
                  three_ds:
                    source: BROWSER
                  merchant_contact_url: 'https://enp4qhvjseljg.x.pipedream.net/'
                  order:
                    time_created_reference: '2019-04-26T10:19:32.552327Z'
                    amount: '5089'
                    currency: EUR
                    reference: 3400dd37-101d-4940-be15-3c963b6109b3
                    address_match_indicator: 'YES'
                    shipping_address:
                      line1: Apartment 852
                      line2: Complex 741
                      line3: House 963
                      city: Chicago
                      postal_code: '50001'
                      state: IL
                      country: US
                    gift_card_count: 1
                    gift_card_currency: EUR
                    gift_card_amount: '25000'
                    delivery_email: james.mason@example.com
                    delivery_timeframe: ELECTRONIC_DELIVERY
                    shipping_method: ANOTHER_VERIFIED_ADDRESS
                    shipping_name_matches_cardholder_name: 'YES'
                    preorder_indicator: MERCHANDISE_AVAILABLE
                    preorder_availability_date: '2019-04-18'
                    reorder_indicator: FIRST_TIME_ORDER
                    category: GOODS_SERVICE_PURCHASE
                  payment_method:
                    card:
                      number: '4012001038488884'
                      expiry_month: '12'
                      expiry_year: '25'
                  payer:
                    reference: 6dcb24f5-74a0-4da3-98da-4f0aa0e88db3
                    account_age: LESS_THAN_THIRTY_DAYS
                    account_creation_date: '2019-01-10'
                    account_change_date: '2019-01-28'
                    account_change_indicator: THIS_TRANSACTION
                    account_password_change_date: '2019-01-15'
                    account_password_change_indicator: LESS_THAN_THIRTY_DAYS
                    home_phone:
                      country_code: '44'
                      subscriber_number: '123456789'
                    work_phone:
                      country_code: '44'
                      subscriber_number: '1801555888'
                    payment_account_creation_date: '2019-01-01'
                    payment_account_age_indicator: LESS_THAN_THIRTY_DAYS
                    suspicious_account_activity: NO_SUSPICIOUS_ACTIVITY
                    purchases_last_6months_count: 3
                    transactions_last_24hours_count: 1
                    transaction_last_year_count: '05'
                    provision_attempt_last_24hours_count: '01'
                    shipping_address_time_created_reference: '2019-01-28'
                    shipping_address_creation_indicator: THIS_TRANSACTION
                  payer_prior_three_ds_authentication_data:
                    authentication_method: FRICTIONLESS_AUTHENTICATION
                    acs_transaction_reference: 26c3f619-39a4-4040-bf1f-6fd433e6d615
                    authentication_timestamp: '2020-07-28T10:26:49.712Z'
                    authentication_data: secret123
                  recurring_authorization_data:
                    max_number_of_instalments: '05'
                    frequency: '25'
                    expiry_date: '2019-08-25'
                  payer_login_data:
                    authentication_data: secret123
                    authentication_timestamp: '2020-07-28T10:26:49.712Z'
                    authentication_type: MERCHANT_SYSTEM_AUTHENTICATION
                  browser_data:
                    accept_header: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'
                    color_depth: TWENTY_FOUR_BITS
                    ip: 123.123.123.123
                    java_enabled: 'TRUE'
                    javascript_enabled: 'TRUE'
                    language: en-US
                    screen_height: '1080'
                    screen_width: '1920'
                    challenge_window_size: FULL_SCREEN
                    timezone: '0'
                    user_agent: 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/70.0.3538.110 Safari/537.36'
              Initiate - 3DS 2 Frictionless:
                value:
                  method_url_completion_status: 'YES'
                  three_ds:
                    source: BROWSER
                  merchant_contact_url: 'https://enp4qhvjseljg.x.pipedream.net/'
                  order:
                    time_created_reference: '2019-04-26T10:19:32.552327Z'
                    amount: '5089'
                    currency: EUR
                    reference: 3400dd37-101d-4940-be15-3c963b6109b3
                    address_match_indicator: 'YES'
                    shipping_address:
                      line1: Apartment 852
                      line2: Complex 741
                      line3: House 963
                      city: Chicago
                      postal_code: '50001'
                      state: IL
                      country: US
                    gift_card_count: 1
                    gift_card_currency: EUR
                    gift_card_amount: '25000'
                    delivery_email: james.mason@example.com
                    delivery_timeframe: ELECTRONIC_DELIVERY
                    shipping_method: ANOTHER_VERIFIED_ADDRESS
                    shipping_name_matches_cardholder_name: 'YES'
                    preorder_indicator: MERCHANDISE_AVAILABLE
                    preorder_availability_date: '2019-04-18'
                    reorder_indicator: FIRST_TIME_ORDER
                    category: GOODS_SERVICE_PURCHASE
                  payment_method:
                    card:
                      number: '4263970000005262'
                      expiry_month: '12'
                      expiry_year: '25'
                  payer:
                    reference: 6dcb24f5-74a0-4da3-98da-4f0aa0e88db3
                    account_age: LESS_THAN_THIRTY_DAYS
                    account_creation_date: '2019-01-10'
                    account_change_date: '2019-01-28'
                    account_change_indicator: THIS_TRANSACTION
                    account_password_change_date: '2019-01-15'
                    account_password_change_indicator: LESS_THAN_THIRTY_DAYS
                    home_phone:
                      country_code: '44'
                      subscriber_number: '123456789'
                    work_phone:
                      country_code: '44'
                      subscriber_number: '1801555888'
                    payment_account_creation_date: '2019-01-01'
                    payment_account_age_indicator: LESS_THAN_THIRTY_DAYS
                    suspicious_account_activity: NO_SUSPICIOUS_ACTIVITY
                    purchases_last_6months_count: 3
                    transactions_last_24hours_count: 1
                    transaction_last_year_count: '05'
                    provision_attempt_last_24hours_count: '01'
                    shipping_address_time_created_reference: '2019-01-28'
                    shipping_address_creation_indicator: THIS_TRANSACTION
                  payer_prior_three_ds_authentication_data:
                    authentication_method: FRICTIONLESS_AUTHENTICATION
                    acs_transaction_reference: 26c3f619-39a4-4040-bf1f-6fd433e6d615
                    authentication_timestamp: '2020-07-28T10:26:49.712Z'
                    authentication_data: secret123
                  recurring_authorization_data:
                    max_number_of_instalments: '05'
                    frequency: '25'
                    expiry_date: '2019-08-25'
                  payer_login_data:
                    authentication_data: secret123
                    authentication_timestamp: '2020-07-28T10:26:49.712Z'
                    authentication_type: MERCHANT_SYSTEM_AUTHENTICATION
                  browser_data:
                    accept_header: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'
                    color_depth: TWENTY_FOUR_BITS
                    ip: 123.123.123.123
                    java_enabled: 'TRUE'
                    javascript_enabled: 'TRUE'
                    language: en-US
                    screen_height: '1080'
                    screen_width: '1920'
                    challenge_window_size: FULL_SCREEN
                    timezone: '0'
                    user_agent: 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML,like Gecko) Chrome/70.0.3538.110 Safari/537.36'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initiate_response'
        
        '400':
          $ref: '#/components/responses/RequestInvalid_400'
        '401':
          $ref: '#/components/responses/AuthenticationInvalid_401'
        '403':
          $ref: '#/components/responses/NotAuthorized_403'
        '404':
          description: Resource Not Found
        '500':
          $ref: '#/components/responses/ServerError_500'
        '501':
          $ref: '#/components/responses/UnknownServerError_501'
        '502':
          $ref: '#/components/responses/UnknownPlatformError_502'
        '504':
          $ref: '#/components/responses/ServerTimeout_504'
      callbacks:
        Challenge Return Notification:
          $ref: '#/components/callbacks/ChallengeReturnNotification'
      security:
        - bearerAuth: []
      servers:
        - url: 'https://apis.sandbox.globalpay.com/ucp'
          description: Sandbox Environment
        - url: 'https://apis.globalpay.com/ucp'
          description: Production Environment
  '/authentications/{id}/result':
    get:
      tags:
        - Obtain Result
      summary: Obtain the authentication information that must be submitted when creating a transaction to achieve the fraud liability shift from the merchant.
      description: Obtain the authentication information that must be submitted when creating a transaction to achieve the fraud liability shift from the merchant.
      operationId: get3DSResult
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-GP-Idempotency'
        - $ref: '#/components/parameters/X-GP-Version'
        - $ref: '#/components/parameters/Content-type'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result_response'
       
          
        '400':
          $ref: '#/components/responses/RequestInvalid_400'
        '401':
          $ref: '#/components/responses/AuthenticationInvalid_401'
        '403':
          $ref: '#/components/responses/NotAuthorized_403'
        '404':
          description: Resource Not Found
        '500':
          $ref: '#/components/responses/ServerError_500'
        '501':
          $ref: '#/components/responses/UnknownServerError_501'
        '502':
          $ref: '#/components/responses/UnknownPlatformError_502'
        '504':
          $ref: '#/components/responses/ServerTimeout_504'
      security:
        - bearerAuth: []
      servers:
        - url: 'https://apis.sandbox.globalpay.com/ucp'
          description: Sandbox Environment
        - url: 'https://apis.globalpay.com/ucp'
          description: Production Environment
  '/authentication/{id}':
    get:
      tags:
        - Get Single Authentication
      summary: Get Single Authentication
      description: Return a single Authentication Response.
      operationId: get-authentications-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/Content-type'
        - $ref: '#/components/parameters/X-GP-Version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_response'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
        '502':
          description: Bad Gateway
        '504':
          description: Gateway Timeout
      security:
        - bearerAuth: []
      servers:
        - url: 'https://apis.sandbox.globalpay.com/ucp'
          description: Sandbox Environment
        - url: 'https://apis.globalpay.com/ucp'
          description: Production Environment
tags:
  - name: Check Availability
    description: Start the authentication process by querying the available mechanisms to authenticate the payer based on the payment method.
  - name: Initiate
    description: 'For 3DS 2 only, submit additional data including the billing and shipping details of the payer, at least one phone number, the device data, transaction details, outcome from the ACS Method URL if it took place and a link to the merchant''s About or Contact page.'
  - name: Obtain Result
    description: Obtain the authentication information that must be submitted when creating a transaction to achieve fraud liability shift from the merchant.
components:
  parameters:
    page:
      name: page
      in: query
      description: 'Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.1 means the first page, 2 the second and so on.'
      schema:
        type: number
        default: 1
        example: 1
    page_size:
      name: page_size
      in: query
      description: 'The total number of records to return in a single page for a list.   page:'
      schema:
        type: number
        default: 5
        example: 5
    order:
      name: order
      in: query
      description: 'The direction of the ordering of the entire list, ASC or DESC'
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: DESC
        example: ASC
    order_by:
      name: order_by
      in: query
      description: 'The field to order the list by.                '
      schema:
        type: string
        default: TIME_CREATED
        example: TIME_CREATED
    Authorization:
      name: Authorization
      in: header
      description: Bearer access token value used to authorize and access the API.  Must always begin with the string "Bearer".
      required: true
      schema:
        type: string
        default: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
        example: Bearer G3FA4TuYGCBiCWs4YpzrALGCYXZJ
    X-GP-Idempotency:
      name: X-GP-Idempotency
      in: header
      description: Integrator generated value submitted in the request header that is checked to ensure the same value has not been seen in the last 24 hours. It is used to ensure idempotency is maintained with this action.
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 50
    X-GP-Version:
      name: X-GP-Version
      in: header
      description: The version of the API to execute the request.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 50
        default: '2021-03-22'
        example: '2021-03-22'
    Content-type:
      name: Content-type
      in: header
      description: Format of the message body.
      required: true
      schema:
        type: string
        default: application/json
        example: application/json
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    RequestInvalid_400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/objRequestInvalid_400'
    AuthenticationInvalid_401:
      description: Not Authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationInvalid_401'
    NotAuthorized_403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorized_403'
    ServerError_500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError_500'
    UnknownServerError_501:
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnknownServerError_501'
    UnknownPlatformError_502:
      description: Bad Gateway
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnknownPlatformError_502'
    ServerTimeout_504:
      description: Timeout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerTimeout_504'
  callbacks:
    ChallengeReturnNotification:
      '{$request.body#/notifications.challenge_return_url}':
        post:
          description: The endpoint which will receive 3DS challenge return notification messages. These notifications indicate that the payer has completed the 3DS authentication challenge and the result of the challenge can be obtained.
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/3ds_callback'
          responses:
            '200':
              description: OK
  schemas:
    create_request:
      type: object
      properties:
        account_name:
          $ref: '#/components/schemas/account_name_AUTHENTICATIONS.account_name'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        reference:
          $ref: '#/components/schemas/reference_AUTHENTICATIONS.reference'
        payment_method:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.payment_method.id'
            name:
              $ref: '#/components/schemas/name_AUTHENTICATIONS.payment_method.name'
            entry_mode:
              $ref: '#/components/schemas/entry_mode_AUTHENTICATIONS.payment_method.entry_mode'
            card:
              type: object
              properties:
                number:
                  $ref: '#/components/schemas/number_AUTHENTICATIONS.payment_method.card.number'
                expiry_month:
                  $ref: '#/components/schemas/expiry_month_AUTHENTICATIONS.payment_method.card.expiry_month'
                expiry_year:
                  $ref: '#/components/schemas/expiry_year_AUTHENTICATIONS.payment_method.card.expiry_year'
        notifications:
          type: object
          properties:
            return_url:
              $ref: '#/components/schemas/return_url_AUTHENTICATIONS.notifications.return_url'
            status_url:
              $ref: '#/components/schemas/status_url_AUTHENTICATIONS.notifications.status_url'
            challenge_return_url:
              $ref: '#/components/schemas/challenge_return_url_AUTHENTICATIONS.notifications.challenge_return_url'
            three_ds_method_return_url:
              $ref: '#/components/schemas/three_ds_method_return_url_AUTHENTICATIONS.notifications.three_ds_method_return_url'
            decoupled_challenge_return_url:
              $ref: '#/components/schemas/decoupled_challenge_return_url_AUTHENTICATIONS.notifications.decoupled_challenge_return_url'
      required:
        - account_name
        - country
        - amount
        - currency
        - reference
        - payment_method
        - notifications
    account_name_AUTHENTICATIONS.account_name:
      type: string
      description: A meaningful label that better identifies the account.
      minLength: 1
      maxLength: 50
      example: transaction_processing
    channel_AUTHENTICATIONS.channel:
      type: string
      enum:
        - CP
        - CNP
      description: |
        Describes whether the transaction was processed in a face to face(CP) scenario or a Customer Not Present (CNP) scenario. 
                       * `CP` - A Customer Present transaction is when the payer and the merchant are in direct face to face contact when exchanging payment method information to fulfill a transaction. e.g. in a store and paying at the counter that is attended by a clerk. 
                       * `CNP` - A Customer NOT Present transaction is when the payer and the merchant are not together when exchanging payment method information to fulfill a transaction. e.g. a transaction executed from a merchant's website or over the phone
      minLength: 1
      maxLength: 50
      example: CP
    country_AUTHENTICATIONS.country:
      type: string
      description: |

        This is the country the merchant is domiciled in.  For example,  if the merchant is based in Canada it must be set to CA. if the merchant is based in England it must be set to GB. if the merchant is based in USA it must be set to US.

        The country in ISO-3166-1(alpha-2 code) format.
      minLength: 2
      maxLength: 2
      example: US
    amount_AUTHENTICATIONS.amount:
      type: string
      description: |
        The amount to transfer between Payer and Merchant for a SALE or a REFUND. It is always represented in the lowest denomination of the related currency. and with no decimal point. Note for European merchants -This field is mandatory for SCA.
      minLength: 1
      maxLength: 50
      example: 11099'
    currency_AUTHENTICATIONS.currency:
      type: string
      enum:
        - USD
        - EUR
        - CAD
        - AFN
        - DZD
        - ARS
        - AMD
        - AWG
        - AUD
        - AZN
        - BSD
        - BHD
        - THB
        - PAB
        - BBD
        - BYN
        - BZD
        - BMD
        - VEF
        - BOB
        - BRL
        - BND
        - BGN
        - BIF
        - CVE
        - CLP
        - COP
        - KMF
        - CDF
        - NIO
        - CRC
        - CUP
        - CZK
        - GMD
        - DKK
        - MKD
        - DJF
        - STD
        - DOP
        - VND
        - XCD
        - EGP
        - SVC
        - ETB
        - FKP
        - FJD
        - HUF
        - GHS
        - GIP
        - HTG
        - PYG
        - GNF
        - GYD
        - HKD
        - UAH
        - ISK
        - INR
        - IRR
        - IQD
        - JMD
        - JOD
        - KES
        - PGK
        - HRK
        - KWD
        - AOA
        - MMK
        - LAK
        - GEL
        - LBP
        - ALL
        - HNL
        - SLL
        - LRD
        - LYD
        - SZL
        - LSL
        - MGA
        - MWK
        - MYR
        - MUR
        - MXN
        - MDL
        - MAD
        - MZN
        - BOV
        - NGN
        - ERN
        - NAD
        - NPR
        - ANG
        - ILS
        - TWD
        - NZD
        - BTN
        - KPW
        - NOK
        - MRO
        - TOP
        - PKR
        - MOP
        - CUC
        - UYU
        - PHP
        - GBP
        - BWP
        - QAR
        - GTQ
        - ZAR
        - OMR
        - KHR
        - RON
        - MVR
        - IDR
        - RUB
        - RWF
        - SHP
        - SAR
        - RSD
        - SCR
        - SGD
        - PEN
        - SBD
        - KGS
        - SOS
        - TJS
        - SSP
        - LKR
        - XSU
        - SDG
        - SRD
        - SEK
        - CHF
        - SYP
        - BDT
        - WST
        - TZS
        - KZT
        - TTD
        - MNT
        - TND
        - TRY
        - TMT
        - AED
        - UGX
        - CLF
        - COU
        - UZS
        - VUV
        - KRW
        - YER
        - JPY
        - CNY
        - ZMW
        - ZWL
        - PLN
      description: 'The currency of the amount in ISO-4217(alpha-3). Please click on <a href="https://developer.globalpay.com/resources/codes/currency-codes" target="_blank">Currency Codes</a> to access the full list of currencies'
      minLength: 3
      maxLength: 3
      example: USD
    reference_AUTHENTICATIONS.reference:
      type: string
      description: Merchant defined field to reference the authentication.
      minLength: 1
      maxLength: 50
      example: becf9f3e-4d33-459c-8ed2-0c4affc9555e
    id_AUTHENTICATIONS.payment_method.id:
      type: string
      description: Unique Global Payments generated id used to reference a stored payment method on the Global Payments system. Often referred to as the payment method token. This value can be used instead of payment method details such as a card number and expiry date.
      minLength: 1
      maxLength: 50
      example: PMT_31087d9c-e68c-4389-9f13-39378e166ea5
    name_AUTHENTICATIONS.payment_method.name:
      type: string
      description: The name of the Payment Method
      minLength: 1
      maxLength: 100
      example: John's payment Method
    entry_mode_AUTHENTICATIONS.payment_method.entry_mode:
      type: string
      enum:
        - MOTO
        - ECOM
        - IN_APP
        - CHIP
        - SWIPE
        - MANUAL
        - PHONE
        - MAIL
        - CONTACTLESS_CHIP
        - CONTACTLESS_SWIPE
        - PRESENT
        - UNKNOWN
      description: |
        Indicates how the payment method information was obtained by the Merchant for this transaction. 
          * `MOTO` - A CNP channel entry mode where the payment method information was obtained over the phone or via postal mail. 
          * `ECOM` - A CNP channel entry mode where the payment method was obtained via a browser. 
          * `IN_APP` - A CNP channel entry mode where the payment method was obtained via an application and applies to digital wallets only. 
          * `CHIP` - A CP channel entry mode where the payment method information was obtained from a chip. E.g. card is inserted into a device to read the chip. 
          * `SWIPE` - A CP channel entry mode where the payment method information was obtained from swiping a magnetic strip. E.g. card's magnetic strip is swiped through a device to read the card information. 
          * `MANUAL` - A CP channel entry mode where the payment method information was obtained by manually keying the payment method information into the device. 
          * `CONTACTLESS_CHIP` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device. E.g. tap a card on or near a device to exchange card information. 
          * `CONTACTLESS_SWIPE` -  A CP channel entry mode where the payment method information was obtained by bringing the payment method to close proximity of a device and also swiping the card. E.g. tap a card on or near a device and swipe it through device to exchange card information 
          * `PHONE` - A CNP channel entry mode where the payment method was obtained over the phone. 
          * `MAIL` - A CNP channel entry mode where the payment method was obtained via postal mail.
          * `PRESENT`- The entry mode cannot be determined but it is a Customer Present transaction.
          * `UNKNOWN` - The entry mode for this transaction cannot be determined.
                                
      minLength: 1
      maxLength: 50
      example: ECOM
    number_AUTHENTICATIONS.payment_method.card.number:
      type: string
      description: The the card account number used to authorize the transaction. Also known as PAN.
      minLength: 1
      maxLength: 50
      example: 4263970000005262'
    expiry_month_AUTHENTICATIONS.payment_method.card.expiry_month:
      type: string
      description: The 2 digit expiry date month of the card.
      minLength: 2
      maxLength: 2
      example: '12'
    expiry_year_AUTHENTICATIONS.payment_method.card.expiry_year:
      type: string
      description: The 2 digit expiry date year of the card.
      minLength: 2
      maxLength: 2
      example: '29'
    return_url_AUTHENTICATIONS.notifications.return_url:
      type: string
      description: 'The merchant URL to return the payer to, once the payer has completed payment using the payment method. This returns control of the payer''s payment experience to the merchant.'
    status_url_AUTHENTICATIONS.notifications.status_url:
      type: string
      description: Indicates to Global Payments where the merchant wants to receive notifications of certain status events that occur on the Global Payments system.
    challenge_return_url_AUTHENTICATIONS.notifications.challenge_return_url:
      type: string
      description: The merchant URL that will receive the notification when the customer has completed the authentication challenge process.
    three_ds_method_return_url_AUTHENTICATIONS.notifications.three_ds_method_return_url:
      type: string
      description: The merchant URL that will receive the notification when the 3DS ACS successfully gathers device information.
    decoupled_challenge_return_url_AUTHENTICATIONS.notifications.decoupled_challenge_return_url:
      type: string
      description: The merchant URL that will receive the notification when the customer has completed the authentication when the authentication is decoupled and separate to the purchase.
    create_response:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        time_created:
          $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
        transaction_type:
          $ref: '#/components/schemas/transaction_type_AUTHENTICATIONS.transaction_type'
        status:
          $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        merchant_id:
          $ref: '#/components/schemas/merchant_id_AUTHENTICATIONS.merchant_id'
        merchant_name:
          $ref: '#/components/schemas/merchant_name_AUTHENTICATIONS.merchant_name'
        account_id:
          $ref: '#/components/schemas/account_id_AUTHENTICATIONS.account_id'
        account_name:
          $ref: '#/components/schemas/account_name_AUTHENTICATIONS.account_name'
        reference:
          $ref: '#/components/schemas/reference_AUTHENTICATIONS.reference'
        three_ds:
          type: object
          properties:
            server_trans_ref:
              $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
            message_version:
              $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
            ds_protocol_version_start:
              $ref: '#/components/schemas/ds_protocol_version_start_AUTHENTICATIONS.three_ds.ds_protocol_version_start'
            ds_protocol_version_end:
              $ref: '#/components/schemas/ds_protocol_version_start_AUTHENTICATIONS.three_ds.ds_protocol_version_start'
            acs_protocol_version_start:
              $ref: '#/components/schemas/acs_protocol_version_start_AUTHENTICATIONS.three_ds.acs_protocol_version_start'
            acs_protocol_version_end:
              $ref: '#/components/schemas/ds_protocol_version_start_AUTHENTICATIONS.three_ds.ds_protocol_version_start'
            acs_info_indicator:
              $ref: '#/components/schemas/acs_info_indicator_AUTHENTICATIONS.three_ds.acs_info_indicator'
            enrolled_status:
              $ref: '#/components/schemas/enrolled_status_AUTHENTICATIONS.three_ds.enrolled_status'
            eci:
              $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
            liability_shift:
              $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
            challenge_model:
              $ref: '#/components/schemas/challenge_model_AUTHENTICATIONS.three_ds.challenge_model'
            session_data_field_name:
              $ref: '#/components/schemas/session_data_field_name_AUTHENTICATIONS.three_ds.session_data_field_name'
            message_type:
              $ref: '#/components/schemas/message_type_AUTHENTICATIONS.three_ds.message_type'
            challenge_value:
              $ref: '#/components/schemas/challenge_value_AUTHENTICATIONS.three_ds.challenge_value'
            redirect_url:
              $ref: '#/components/schemas/redirect_url_AUTHENTICATIONS.three_ds.redirect_url'
            acs_challenge_request_url:
              $ref: '#/components/schemas/acs_challenge_request_url_AUTHENTICATIONS.three_ds.acs_challenge_request_url'
            method_url:
              $ref: '#/components/schemas/method_url_AUTHENTICATIONS.three_ds.method_url'
            method_data:
              type: object
              properties:
                three_ds_server_trans_id:
                  $ref: '#/components/schemas/three_ds_server_trans_id_AUTHENTICATIONS.three_ds.method_data.three_ds_server_trans_id'
                three_ds_method_return_url:
                  $ref: '#/components/schemas/three_ds_method_return_url_AUTHENTICATIONS.notifications.three_ds_method_return_url'
                encoded_method_data:
                  $ref: '#/components/schemas/encoded_method_data_AUTHENTICATIONS.three_ds.method_data.encoded_method_data'
        notifications:
          type: object
          properties:
            challenge_return_url:
              $ref: '#/components/schemas/challenge_return_url_AUTHENTICATIONS.notifications.challenge_return_url'
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.action.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_AUTHENTICATIONS.action.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
    id_AUTHENTICATIONS.id:
      type: string
      description: A unique identifier that is used to identify and reference an instance of this resource. It is generated by Global Payments to identify the authentication and must be used to action or reference that authentication.
      minLength: 1
      maxLength: 50
      example: AUT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
    time_created_AUTHENTICATIONS.time_created:
      type: string
      description: Global Payments generated time indicating when the object was created in ISO-8601 format.
      example: '2021-05-03T21:23:39.718Z'
    transaction_type_AUTHENTICATIONS.transaction_type:
      type: string
      enum:
        - SALE
        - REFUND
      description: |
        Describes whether the transaction is a SALE, that moves funds from Payer to Merchant, or a REFUND where funds move from Merchant to Payer. 
                     * `SALE` - indicates the movement, or the attempt to move, funds from payer to a merchant. 
                     * `REFUND` - indicates the movement, or the attempt to move, funds from merchant to the payer.
      minLength: 1
      maxLength: 50
      example: SALE
    status_AUTHENTICATIONS.status:
      type: string
      enum:
        - AVAILABLE
        - NOT_ENROLLED
        - CHALLENGE_REQUIRED
        - SUCCESS_AUTHENTICATED
        - SUCCESS_ATTEMPT_MADE
        - NOT_AUTHENTICATED
        - CHALLENGE_PREFERENCE_ACKNOWLEDGED_INFORMATIONAL_ONLY
        - FAILED
      description: |
        Indicates where the authentication is in its lifecycle 
                       * `AVAILABLE` - An authentication mechanism is available. The next step is to initiate the authentication. No liability shift at this stage. 
                       * `NOT_AVAILABLE` - The authentication mechanism is not available. The next step is to check for availability of another authentication mechanism. No liability shift at this stage. 
                       * `NOT_ENROLLED` - The payer's payment method is not enrolled in 3DS version 1 or version 2. If the card is a Visa or Mastercard a liability shift is achieved and the recommendation is execute the care authorization. However there us no liability shift at this stage for Amex,so the recommendation is not for go for card authorization. 
                       * `CHALLENGE_REQUIRED` - The authentication mechanism is available and the next step is to facilitate authentication of the payer. No liability shift at this stage. 
                       * `SUCCESS_AUTHENTICATED` - The authentication of the payer has been a success and a liability shift has been achieved so the recommendation is to go for authorization 
                       * `SUCCESS_ATTEMPT_MADE` - A valid attempt to authenticate the payer has been executed and a liability shift has been achieved so the recommendation is to go for authorization. 
                       * `NOT_AUTHENTICATED` - The payer did not authenticate therefore a liability shift has not been achieved. The recommendation is to not proceed with card authorization. 
                       * `FAILED` - A step in the authentication process has errored and there do not go for card authorization. 
                       * `CHALLENGE_PREFERENCE_ACKNOWLEDGED_INFORMATIONAL_ONLY`
      minLength: 1
      maxLength: 50
      example: AVAILABLE
    merchant_id_AUTHENTICATIONS.merchant_id:
      type: string
      description: 'A unique identifier that is used to identify and reference an instance of this resource. This id is used when actioning or referencing a specific merchant. Begins with the three letters, MER.'
      minLength: 1
      maxLength: 50
      example: MER_A6A1EC44522F96630ABEA17A
    merchant_name_AUTHENTICATIONS.merchant_name:
      type: string
      description: A meaningful label that better identifies the merchant.
      minLength: 1
      maxLength: 50
      example: ABC INDUSTRIES
    account_id_AUTHENTICATIONS.account_id:
      type: string
      description: 'A unique identifier that is used to identify and reference an instance of this resource. This id is used when actioning or referencing a specific account. Begins with the three letters, TRA.'
      minLength: 1
      maxLength: 50
      example: TRA_86920f927028745yt34d077d88beb29b
    server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref:
      type: string
      description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
      minLength: 1
      maxLength: 50
    message_version_AUTHENTICATIONS.three_ds.message_version:
      type: string
      description: Indicates the version of 3DS.
    ds_protocol_version_start_AUTHENTICATIONS.three_ds.ds_protocol_version_start:
      type: string
      description: The version range supported by the Directory Server (Card Scheme).
      minLength: 1
      maxLength: 50
    acs_protocol_version_start_AUTHENTICATIONS.three_ds.acs_protocol_version_start:
      type: string
      description: The version range supported by the Access Control Server (Issuer).
      minLength: 1
      maxLength: 50
    acs_info_indicator_AUTHENTICATIONS.three_ds.acs_info_indicator:
      type: array
      description: |
        Identifies the 3D Secure 2 features that the ACS supports, for example, Whitelisting or Decoupled Authentication.
            * `NOT_AVAILABLE`
            * `AUTHENTICATION_AVAILABLE_AT_ACS`
            * `ATTEMPTS_SUPPORTED_BY_ACS`
            * `DECOUPLED_AUTHENTICATION_SUPPORTED`
            * `WHITELISTING_SUPPORTED`
            * `SCHEME_INFO_INDICATOR_##`
      items:
        type: string
        enum:
          - NOT_AVAILABLE
          - AUTHENTICATION_AVAILABLE_AT_ACS
          - ATTEMPTS_SUPPORTED_BY_ACS
          - DECOUPLED_AUTHENTICATION_SUPPORTED
          - WHITELISTING_SUPPORTED
          - SCHEME_INFO_INDICATOR_##
      example:
        - NOT_AVAILABLE
    enrolled_status_AUTHENTICATIONS.three_ds.enrolled_status:
      type: string
      enum:
        - ENROLLED
        - NOT_ENROLLED
        - NOT_ENROLLED_ATTEMPT
        - UNABLE_TO_VERIFY
      description: |
        Indicates if the payer is enrolled for 3DS with this card.
           * `ENROLLED`
           * `NOT_ENROLLED`
           * `NOT_ENROLLED_ATTEMPT`
           * `UNABLE_TO_VERIFY`
      minLength: 1
      maxLength: 50
      example: ENROLLED
    eci_AUTHENTICATIONS.three_ds.eci:
      type: string
      description: An indication of the degree of the authentication and liability shift obtained for this transaction. It is returned after the 3D Secure process has completed.
      minLength: 1
      maxLength: 50
    liability_shift_AUTHENTICATIONS.three_ds.liability_shift:
      type: string
      enum:
        - 'YES'
        - 'NO'
        - UNSURE
        - ''
      description: |
        Indicates if the payment has been successfully completed authentication, either by the customer during 3DS or using 3RI in a merchant initiated transaction. If the value returned is YES, then it's recommended to proceed and execute a card authorization. In the event of a "fraudulent" chargeback from the customer, the liability for that dispute has shifted to the issuing bank and away from the merchant.
          * `YES`
          * `NO`
          * `UNSURE`
      minLength: 1
      maxLength: 50
    challenge_model_AUTHENTICATIONS.three_ds.challenge_model:
      type: string
      enum:
        - STATIC_CHALLENGE
        - DYNAMIC_CHALLENGE
        - OUT_OF_BAND_CHALLENGE
        - DECOUPLED
      description: |
        Indicates the type of authentication method the Issuer will use to challenge the customer.
           * `STATIC_CHALLENGE`
           * `DYNAMIC_CHALLENGE`
           * `OUT_OF_BAND_CHALLENGE`
           * `DECOUPLED`
      minLength: 1
      maxLength: 50
      example: STATIC_CHALLENGE
    session_data_field_name_AUTHENTICATIONS.three_ds.session_data_field_name:
      type: string
      enum:
        - threeDSSessionData
        - MD
      description: |
        Indicates the field name to populate data with when redirecting to the 3DS ACS. The data will be returned by the ACS in the same field name when redirecting back to the notification challenge result URL. 
                                * MD - Use this field name in the redirect to the ACS 3DS 1. 
                                * threeDSSessionData - Use this field name in the redirect to the ACS for 3DS 2.
      minLength: 1
      maxLength: 50
      example: threeDSSessionData
    message_type_AUTHENTICATIONS.three_ds.message_type:
      type: string
      enum:
        - PAREQ
        - CREQ
      description: |
        Indicates what is the authentication value format used.
            * `PAREQ`
            * `CREQ`
      example: CREQ
    challenge_value_AUTHENTICATIONS.three_ds.challenge_value:
      type: string
      description: The value to be submitted in the request to the redirect_url when challenging an authentication. It is Base64url encoded and must be sent to the ACS.
      minLength: 1
      maxLength: 50
    redirect_url_AUTHENTICATIONS.three_ds.redirect_url:
      type: string
      description: acs_challenge_request_url should be used instead of the redirect_url -URL to redirect the payer from the merchant's system to the payment method system. This is used to determine or execute a challenge to the payer.
      minLength: 1
      maxLength: 50
    acs_challenge_request_url_AUTHENTICATIONS.three_ds.acs_challenge_request_url:
      type: string
      description: The ACS URL that the payer is redirect to execute a challenge to the payer.
    method_url_AUTHENTICATIONS.three_ds.method_url:
      type: string
      description: 'The URL to facilitate the ACS gathering device data. If the ACS does not support this functionality, this field will not be returned. This URL needs to be called from a hidden iframe so that the ACS can gather information about the device being used to authenticate, for example a phone or a browser. The notifications.method_return_url will receive a notification when the 3DS ACS successfully gathers device information and to close the hidden iFrame.'
    three_ds_server_trans_id_AUTHENTICATIONS.three_ds.method_data.three_ds_server_trans_id:
      type: string
      description: The reference created by the 3DSecure provider to identify the specific authentication attempt.
    encoded_method_data_AUTHENTICATIONS.three_ds.method_data.encoded_method_data:
      type: string
      description: 'JSON object containing the Base64Url encoded string, made up of the integator''s method_notification_url and the server_trans_ref which must be sent to the method_url when facilitating the ACS to gather device information.'
    id_AUTHENTICATIONS.action.id:
      type: string
      description: A unique identifier generated by Global Payments to identify an action.
      minLength: 1
      maxLength: 50
      example: ACT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
    type_AUTHENTICATIONS.action.type:
      type: string
      enum:
        - INITIATE
        - GET_CHALLENGE_RESULT
        - CHECK_AVAILABILITY
      description: Indicates the specific action taken.
      minLength: 1
      maxLength: 50
      example: CHECK_AVAILABILITY
    time_created_AUTHENTICATIONS.action.time_created:
      type: string
      description: Global Payments time indicating when the object was created in ISO-8601 format.
      example: '2021-05-03T21:23:39.718Z'
    result_code_AUTHENTICATIONS.action.result_code:
      type: string
      enum:
        - SUCCESS
      description: The result of the action executed.
      minLength: 1
      maxLength: 50
      example: SUCCESS
    app_id_AUTHENTICATIONS.action.app_id:
      type: string
      description: The id of the app that was used to create the token.
      minLength: 1
      maxLength: 50
      example: uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
    app_name_AUTHENTICATIONS.action.app_name:
      type: string
      description: The name of the app the user gave to the application.
      minLength: 1
      maxLength: 50
      example: my_lovely_app
    3ds_callback:
      type: object
      title: 3ds_callback
      properties:
        id:
          $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        time_created:
          $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
        status:
          $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        reference:
          $ref: '#/components/schemas/reference_AUTHENTICATIONS.reference'
        merchant_id:
          $ref: '#/components/schemas/merchant_id_AUTHENTICATIONS.merchant_id'
        merchant_name:
          $ref: '#/components/schemas/merchant_name_AUTHENTICATIONS.merchant_name'
        account_id:
          $ref: '#/components/schemas/account_id_AUTHENTICATIONS.account_id'
        account_name:
          $ref: '#/components/schemas/account_name_AUTHENTICATIONS.account_name'
        three_ds:
          type: object
          properties:
            acs_trans_reference:
              $ref: '#/components/schemas/acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref'
            message_type:
              $ref: '#/components/schemas/message_type_AUTHENTICATIONS.three_ds.message_type'
            message_extension:
              $ref: '#/components/schemas/message_extension_AUTHENTICATIONS.three_ds.message_extension'
            message_version:
              $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
            acs_transaction_status:
              type: string
            session_data:
              type: string
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.action.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_AUTHENTICATIONS.action.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
    acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref:
      type: string
      description: Unique transaction identifier assigned by the ACS.
      minLength: 1
      maxLength: 50
    message_extension_AUTHENTICATIONS.three_ds.message_extension:
      type: string
      description: Scheme specific data elements used to to carry additional data. Message extension is sent based on rules set by each scheme and may not always be present in the response.
    to_time_created:
      type: string
      description: |
        The end time to search for in a range, using the resource time_created value.
      format: date
      example: '2023-05-01'
    from_time_created:
      type: string
      description: |
        The start time to search for in a range, using the resource time_created value.
      format: date
      example: '2022-05-01'
    source_AUTHENTICATIONS.source:
      type: string
      enum:
        - BROWSER
        - MERCHANT_INITIATED
        - MOBILE_SDK
      description: |
        Indicates the type of system used to initiate the authentication.
           * `BROWSER`
           * `MERCHANT_INITIATED`
           * `MOBILE_SDK`
      minLength: 1
      maxLength: 50
      example: BROWSER
    ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref:
      type: string
      description: The reference created by the 3DSecure Directory Server to identify the specific authentication attempt.
      minLength: 1
      maxLength: 50
    authentication_value_AUTHENTICATIONS.three_ds.authentication_value:
      type: string
      description: A CNP Card transaction's 3D Secure Customer Authentication Verification Value that is used to determine and validate the degree of authentication executed for this transaction.
      minLength: 1
      maxLength: 50
    list_response:
      type: object
      properties:
        current_page_size:
          $ref: '#/components/schemas/current_page_size'
        merchant_id:
          $ref: '#/components/schemas/merchant_id_AUTHENTICATIONS.merchant_id'
        merchant_name:
          $ref: '#/components/schemas/merchant_name_AUTHENTICATIONS.merchant_name'
        account_id:
          $ref: '#/components/schemas/account_id_AUTHENTICATIONS.account_id'
        account_name:
          $ref: '#/components/schemas/account_name_AUTHENTICATIONS.account_name'
        filter:
          type: object
          properties:
            from_time_created:
              $ref: '#/components/schemas/from_time_created'
            to_time_created:
              $ref: '#/components/schemas/to_time_created'
        paging:
          type: object
          properties:
            page_size:
              $ref: '#/components/schemas/page_size.paging.page_size'
            page:
              $ref: '#/components/schemas/page.paging.page'
            order:
              $ref: '#/components/schemas/order.paging.order'
            order_by:
              $ref: '#/components/schemas/order_by.paging.order_by'
        authentications:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
            status:
              $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
            channel:
              $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
            amount:
              $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
            currency:
              $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
            country:
              $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
            source:
              $ref: '#/components/schemas/source_AUTHENTICATIONS.source'
            payment_method:
              type: object
              properties:
                result:
                  $ref: '#/components/schemas/result_AUTHENTICATIONS.payment_method.result'
                message:
                  $ref: '#/components/schemas/message_AUTHENTICATIONS.payment_method.message'
                entry_mode:
                  $ref: '#/components/schemas/entry_mode_AUTHENTICATIONS.payment_method.entry_mode'
                fingerprint:
                  $ref: '#/components/schemas/fingerprint_AUTHENTICATIONS.payment_method.fingerprint'
                fingerprint_presence_indicator:
                  $ref: '#/components/schemas/fingerprint_presence_indicator_AUTHENTICATIONS.payment_method.fingerprint_presence_indicator'
                name:
                  $ref: '#/components/schemas/name_AUTHENTICATIONS.payment_method.name'
                card:
                  type: object
                  properties:
                    funding:
                      $ref: '#/components/schemas/funding_AUTHENTICATIONS.payment_method.card.funding'
                    brand:
                      $ref: '#/components/schemas/brand_AUTHENTICATIONS.payment_method.card.brand'
                    authcode:
                      $ref: '#/components/schemas/authcode_AUTHENTICATIONS.payment_method.card.authcode'
                    brand_reference:
                      $ref: '#/components/schemas/brand_reference_AUTHENTICATIONS.payment_method.card.brand_reference'
                    masked_number_first6last4:
                      $ref: '#/components/schemas/masked_number_first6last4_AUTHENTICATIONS.payment_method.card.masked_number_first6last4'
                    cvv_indicator:
                      $ref: '#/components/schemas/cvv_indicator_AUTHENTICATIONS.payment_method.card.cvv_indicator'
                    cvv_result:
                      $ref: '#/components/schemas/cvv_result_AUTHENTICATIONS.payment_method.card.cvv_result'
                    avs_address_result:
                      $ref: '#/components/schemas/avs_address_result_AUTHENTICATIONS.payment_method.card.avs_address_result'
                    avs_postal_code_result:
                      $ref: '#/components/schemas/avs_postal_code_result_AUTHENTICATIONS.payment_method.card.avs_postal_code_result'
                three_ds:
                  type: object
                  properties:
                    acs_trans_ref:
                      $ref: '#/components/schemas/acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref'
                    ds_trans_ref:
                      $ref: '#/components/schemas/ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref'
                    server_trans_ref:
                      $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
                    liability_shift:
                      $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
                    value:
                      $ref: '#/components/schemas/authentication_value_AUTHENTICATIONS.three_ds.authentication_value'
                    eci:
                      $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
                    status:
                      $ref: '#/components/schemas/status_AUTHENTICATIONS.three_ds.status'
                    status_reason:
                      $ref: '#/components/schemas/status_reason_AUTHENTICATIONS.three_ds.status_reason'
                    message_category:
                      $ref: '#/components/schemas/message_category_AUTHENTICATIONS.three_ds.message_category'
                    message_version:
                      $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
                    challenge_status:
                      $ref: '#/components/schemas/challenge_status_AUTHENTICATIONS.three_ds.challenge_status'
            action_create_id:
              $ref: '#/components/schemas/action_create_id_AUTHENTICATIONS.action_create_id'
            system:
              type: object
              properties:
                mid:
                  $ref: '#/components/schemas/mid_AUTHENTICATIONS.system.mid'
                tid:
                  $ref: '#/components/schemas/tid_AUTHENTICATIONS.system.tid'
                name:
                  $ref: '#/components/schemas/name_AUTHENTICATIONS.system.name'
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_ACTIONS.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_AUTHENTICATIONS.action.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
      x-examples:
        Example 1:
          current_page_size: ''
          merchant_id: ''
          merchant_name: ''
          account_id: ''
          account_name: ''
          filter:
            from_time_created: ''
            to_time_created: ''
          paging:
            page_size: ''
            page: ''
            order: ''
            order_by: ''
          authentications:
            id: ''
            time_created: ''
            status: ''
            channel: ''
            amount: ''
            currency: ''
            country: ''
            source: ''
            payment_method:
              result: ''
              message: ''
              entry_mode: ''
              fingerprint: ''
              fingerprint_presence_indicator: ''
              name: ''
              card:
                funding: ''
                brand: ''
                authcode: ''
                brand_reference: ''
                masked_number_first6last4: ''
                cvv_indicator: ''
                cvv_result: ''
                avs_address_result: ''
                avs_postal_code_result: ''
              three_ds:
                acs_trans_ref: ''
                ds_trans_ref: ''
                server_trans_ref: ''
                liability_shift: ''
                value: ''
                eci: ''
                status: ''
                status_reason: ''
                message_category: ''
                message_version: ''
                challenge_status: ''
            action_create_id: ''
            system:
              mid: ''
              tid: ''
              name: ''
          action:
            id: ''
            type: ''
            time_created: ''
            result_code: ''
            app_id: ''
            app_name: ''
    current_page_size:
      type: number
      description: The total number of records returned on the current page. If current_page_size is less than the page_size using in the querystring then this is the final page for that search.
      example: 564
    page_size.paging.page_size:
      type: number
      description: The total number of records to return in a single page for a list.
      default: 5
      example: 5
    page.paging.page:
      type: number
      description: 'Indicates the page sequence to return in the response. The number of records presented on each page is determined by page_size field.1 means the first page, 2 the second and so on.'
      default: 1
      example: 1
    order.paging.order:
      type: string
      enum:
        - ASC
        - DESC
      description: 'The direction of the ordering of the entire list, ASC or DESC'
      example: ASC
    order_by.paging.order_by:
      type: string
      description: The field to order the list by.
      default: TIME_CREATED
      example: TIME_CREATED
    result_AUTHENTICATIONS.payment_method.result:
      type: string
      description: Result code from the payment method provider
    message_AUTHENTICATIONS.payment_method.message:
      type: string
      description: Result message from the payment method provider corresponding to the result code.
    fingerprint_AUTHENTICATIONS.payment_method.fingerprint:
      type: string
      description: 'If enabled, this field contains the unique fingerprint signature for that payment method for that merchant. If the payment method is seen again this same value is generated. For cards the primary account number is checked only. The expiry date or the CVV is not used for this check.'
      maxLength: 256
    fingerprint_presence_indicator_AUTHENTICATIONS.payment_method.fingerprint_presence_indicator:
      type: string
      enum:
        - NEW
        - EXISTS
      description: |
        If enabled, this field indicates whether the payment method has been seen before or is new.
        * `EXISTS` - Indicates that the payment method was seen on the platform before by this merchant.
        * `NEW` - Indicates that the payment method was not seen on the platform before by this merchant.
      maxLength: 256
      example: NEW
    funding_AUTHENTICATIONS.payment_method.card.funding:
      type: string
      enum:
        - DEBIT
        - CREDIT
        - CASH_BENEFITS
        - FOOD_STAMP
        - PREPAID
      description: |
        Indicates how the card is funded:
                                   * `DEBIT` - indicates the card is a debit card where the funds may be present in an account to fulfill the transaction amount. 
                                   * `CREDIT` - indicates the card is a credit card where the funds may be available on credit to the payer to fulfill the transaction amount.
                                   * `FOOD_STAMP` - indicates the card is an, Electronic Benefits Transfer, for food stamps.
                                   * `CASH_BENEFITS` - indicates the card is an, Electronic Benefits Transfer, for cash benefits.
                                   * `PREPAID` - indicates the card is a prepaid card where the funds are loaded to the card account to fulfill the transaction amount. Unlike a debit card, a prepaid is not linked to a bank account.
      minLength: 1
      maxLength: 50
      example: CREDIT
    brand_AUTHENTICATIONS.payment_method.card.brand:
      type: string
      enum:
        - VISA
        - MASTERCARD
        - AMEX
        - DINERS
        - DISCOVER
        - JCB
        - CUP
      description: Indicates the card brand that issued the card.
      maxLength: 50
      example: VISA
    authcode_AUTHENTICATIONS.payment_method.card.authcode:
      type: string
      description: Code generated by the card provider when the card is successfully authorized.
      minLength: 1
      maxLength: 50
    brand_reference_AUTHENTICATIONS.payment_method.card.brand_reference:
      type: string
      description: The unique reference created by the brands/schemes to uniquely identify the transaction.
      minLength: 1
      maxLength: 50
      example: '000000321000010'
    masked_number_first6last4_AUTHENTICATIONS.payment_method.card.masked_number_first6last4:
      type: string
      description: Masked card number with the front 6 and last 4 digits visible.
      minLength: 1
      maxLength: 50
      example: 426397xxxxxx5262
    cvv_indicator_AUTHENTICATIONS.payment_method.card.cvv_indicator:
      type: string
      enum:
        - ILLEGIBLE
        - NOT_PRESENT
        - PRESENT
      description: |
        Card Verification Value Indicator sent by the Merchant indicating the CVV availability. 
                                  * `ILLEGIBLE` - indicates the cvv is present but cannot be read. 
                                  * `NOT_PRESENT` - indicates the cvv is not present on the card. 
                                  * `PRESENT` - indicates the cvv is present.
      minLength: 1
      maxLength: 50
      example: PRESENT
    cvv_result_AUTHENTICATIONS.payment_method.card.cvv_result:
      type: string
      enum:
        - MATCHED
        - NOT_MATCHED
        - NOT_CHECKED
      description: The result of the CVV check.
      example: MATCHED
    avs_address_result_AUTHENTICATIONS.payment_method.card.avs_address_result:
      type: string
      enum:
        - MATCHED
        - NOT_MATCHED
        - NOT_CHECKED
      description: The result of the AVS address check.
      example: MATCHED
    avs_postal_code_result_AUTHENTICATIONS.payment_method.card.avs_postal_code_result:
      type: string
      enum:
        - MATCHED
        - NOT_MATCHED
        - NOT_CHECKED
      description: The result of the AVS postal code check.
      example: MATCHED
    status_AUTHENTICATIONS.three_ds.status:
      type: string
      enum:
        - AUTHENTICATION_SUCCESSFUL
        - AUTHENTICATION_FAILED
        - AUTHENTICATION_COULD_NOT_BE_PERFORMED
        - AUTHENTICATION_ATTEMPTED_BUT_NOT_SUCCESSFUL
        - CHALLENGE_REQUIRED
        - AUTHENTICATION_ISSUER_REJECTED
        - DECOUPLED_AUTHENTICATION_CONFIRMED
        - CHALLENGE_PREFERENCE_ACKNOWLEDGED_INFORMATIONAL_ONLY
      description: |
        Indicates whether a transaction qualifies as an authenticated transaction or account verification.
            * `AUTHENTICATION_SUCCESSFUL`
            * `AUTHENTICATION_FAILED`
            * `AUTHENTICATION_COULD_NOT_BE_PERFORMED`
            * `AUTHENTICATION_ATTEMPTED_BUT_NOT_SUCCESSFUL`
            * `CHALLENGE_REQUIRED`
            * `AUTHENTICATION_ISSUER_REJECTED`
            * `DECOUPLED_AUTHENTICATION_CONFIRMED`
            * `CHALLENGE_PREFERENCE_ACKNOWLEDGED_INFORMATIONAL_ONLY`
      minLength: 1
      maxLength: 50
      example: AUTHENTICATION_SUCCESSFUL
    status_reason_AUTHENTICATIONS.three_ds.status_reason:
      type: string
      enum:
        - CARD_AUTHENTICATION_FAILED
        - UNKNOWN_DEVICE
        - UNSUPPORTED_DEVICE
        - EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT
        - EXPIRED_CARD
        - INVALID_CARD_NUMBER
        - INVALID_TRANSACTION
        - NO_CARD_RECORD
        - SECURITY_FAILURE
        - STOLEN_CARD
        - SUSPECTED_FRAUD
        - TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER
        - CARDHOLDER_NOT_ENROLLED_IN_SERVICE
        - TRANSACTION_TIMED_OUT_AT_THE_ACS
        - LOW_CONFIDENCE
        - MEDIUM_CONFIDENCE
        - HIGH_CONFIDENCE
        - VERY_HIGH_CONFIDENCE
        - EXCEEDS_ACS_MAXIMUM_CHALLENGES
        - NON_PAYMENT_TRANSACTION_NOT_SUPPORTED
        - THREERI_TRANSACTION_NOT_SUPPORTED
        - ACS_TECHNICAL_ISSUE
        - DECOUPLED_AUTHENTICATION_REQUIRED_BY_ACS
        - DECOUPLED_MAX_EXPIRY_TIME_EXCEEDED
        - INSUFFICIENT_TIME_TO_AUTHENTICATE
        - AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED
        - SCHEME_STATUS_REASON
      description: |
        Provides information on why the authentication status field has the specified value based on the response from the 3DS provider.
           * `CARD_AUTHENTICATION_FAILED`
           * `UNKNOWN_DEVICE`
           * `UNSUPPORTED_DEVICE`
           * `EXCEEDS_AUTHENTICATION_FREQUENCY_LIMIT`
           * `EXPIRED_CARD`
           * `INVALID_CARD_NUMBER`
           * `INVALID_TRANSACTION`
           * `NO_CARD_RECORD`
           * `SECURITY_FAILURE`
           * `STOLEN_CARD`
           * `SUSPECTED_FRAUD`
           * `TRANSACTION_NOT_PERMITTED_TO_CARDHOLDER`
           * `CARDHOLDER_NOT_ENROLLED_IN_SERVICE`
           * `TRANSACTION_TIMED_OUT_AT_THE_ACS`
           * `LOW_CONFIDENCE`
           * `MEDIUM_CONFIDENCE`
           * `HIGH_CONFIDENCE`
           * `VERY_HIGH_CONFIDENCE`
           * `EXCEEDS_ACS_MAXIMUM_CHALLENGES`
           * `NON_PAYMENT_TRANSACTION_NOT_SUPPORTED`
           * `THREERI_TRANSACTION_NOT_SUPPORTED`
           * `ACS_TECHNICAL_ISSUE`
           * `DECOUPLED_AUTHENTICATION_REQUIRED_BY_ACS`
           * `DECOUPLED_MAX_EXPIRY_TIME_EXCEEDED`
           * `INSUFFICIENT_TIME_TO_AUTHENTICATE`
           * `AUTHENTICATION_ATTEMPTED_BUT_NOT_PERFORMED`
           * `SCHEME_STATUS_REASON`
      minLength: 1
      maxLength: 50
      example: HIGH_CONFIDENCE
    message_category_AUTHENTICATIONS.three_ds.message_category:
      type: string
      enum:
        - PAYMENT_AUTHENTICATION
        - NON_PAYMENT_AUTHENTICATION
      description: |
        Indicates the reason category the authentication was initiated. 
                         * `PAYMENT_AUTHENTICATION` - The authentication relates to a payment.
                         * `NON_PAYMENT_AUTHENTICATION` - non payment activity such as adding or maintaining cards or card verification (OTB).
      minLength: 1
      maxLength: 50
      example: PAYMENT_AUTHENTICATION
    challenge_status_AUTHENTICATIONS.three_ds.challenge_status:
      type: string
      enum:
        - MANDATED
        - NOT_MANDATED
        - UNKNOWN
      description: |
        Indicates whether a challenge is required due to local/regional mandates or another variable.
          * `MANDATED`
          * `NOT_MANDATED`
          * `UNKNOWN`
      minLength: 1
      maxLength: 50
      example: MANDATED
    action_create_id_AUTHENTICATIONS.action_create_id:
      type: string
      description: A unique identifier generated by Global Payments to identify the action returned on the Authentication initiated
      example: ACT_uzFr7t4VOqxdLDI44hHmXIjHtOOE8d
    mid_AUTHENTICATIONS.system.mid:
      type: string
      description: Merchant Identifier from the Global Payments system.
      minLength: 1
      maxLength: 50
    tid_AUTHENTICATIONS.system.tid:
      type: string
      description: Merchant device or point of integration Identifier from the Global Payments system.
      minLength: 1
      maxLength: 50
    name_AUTHENTICATIONS.system.name:
      type: string
      description: The merchant name that exists on the Global Payments system.
      minLength: 1
      maxLength: 50
    time_created_ACTIONS.time_created:
      type: string
      description: The time the action that initialed the activity this notification was executed.
      format: date-time
    initiate_request:
      type: object
      properties:
        three_ds:
          type: object
          properties:
            source:
              $ref: '#/components/schemas/source_AUTHENTICATIONS.three_ds.source'
            preference:
              $ref: '#/components/schemas/preference_AUTHENTICATIONS.three_ds.preference'
        merchant_contact_url:
          $ref: '#/components/schemas/merchant_contact_url_AUTHENTICATIONS.merchant_contact_url'
        payment_method:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.payment_method.id'
            name:
              $ref: '#/components/schemas/name_AUTHENTICATIONS.payment_method.name'
            entry_mode:
              $ref: '#/components/schemas/entry_mode_AUTHENTICATIONS.payment_method.entry_mode'
            card:
              type: object
              properties:
                number:
                  $ref: '#/components/schemas/number_AUTHENTICATIONS.payment_method.card.number'
                expiry_month:
                  $ref: '#/components/schemas/expiry_month_AUTHENTICATIONS.payment_method.card.expiry_month'
                expiry_year:
                  $ref: '#/components/schemas/expiry_year_AUTHENTICATIONS.payment_method.card.expiry_year'
        order:
          type: object
          properties:
            reference:
              $ref: '#/components/schemas/reference_AUTHENTICATIONS.order.reference'
            time_created_reference:
              $ref: '#/components/schemas/time_created_reference_AUTHENTICATIONS.order.time_created_reference'
            amount:
              $ref: '#/components/schemas/amount_AUTHENTICATIONS.order.amount'
            currency:
              $ref: '#/components/schemas/currency_AUTHENTICATIONS.order.currency'
            address_match_indicator:
              $ref: '#/components/schemas/address_match_indicator_AUTHENTICATIONS.order.address_match_indicator'
            shipping_address:
              type: object
              properties:
                line_1:
                  $ref: '#/components/schemas/line_1_AUTHENTICATIONS.order.shipping_address.line_1'
                line_2:
                  $ref: '#/components/schemas/line_2_AUTHENTICATIONS.order.shipping_address.line_2'
                line_3:
                  $ref: '#/components/schemas/line_3_AUTHENTICATIONS.order.shipping_address.line_3'
                ctiy:
                  $ref: '#/components/schemas/city_AUTHENTICATIONS.order.shipping_address.city'
                state:
                  $ref: '#/components/schemas/state_AUTHENTICATIONS.order.shipping_address.state'
                postal_code:
                  $ref: '#/components/schemas/postal_code_AUTHENTICATIONS.order.shipping_address.postal_code'
                country:
                  $ref: '#/components/schemas/country_AUTHENTICATIONS.order.shipping_address.country'
            gift_card_count:
              $ref: '#/components/schemas/gift_card_count_AUTHENTICATIONS.order.gift_card_count'
            gift_card_amount:
              $ref: '#/components/schemas/gift_card_amount_AUTHENTICATIONS.order.gift_card_amount'
            gift_card_currency:
              $ref: '#/components/schemas/gift_card_currency_AUTHENTICATIONS.order.gift_card_currency'
            delivery_email:
              $ref: '#/components/schemas/delivery_email_AUTHENTICATIONS.order.delivery_email'
            delivery_timeframe:
              $ref: '#/components/schemas/delivery_timeframe_AUTHENTICATIONS.order.delivery_timeframe'
            shipping_method:
              $ref: '#/components/schemas/shipping_method_AUTHENTICATIONS.order.shipping_method'
            shipping_name_matches_cardholder_name:
              $ref: '#/components/schemas/shipping_name_matches_cardholder_name_AUTHENTICATIONS.order.shipping_name_matches_cardholder_name'
            preorder_indicator:
              $ref: '#/components/schemas/preorder_indicator_AUTHENTICATIONS.order.preorder_indicator'
            preorder_availability_date:
              $ref: '#/components/schemas/preorder_availability_date_AUTHENTICATIONS.order.preorder_availability_date'
            category:
              $ref: '#/components/schemas/category_AUTHENTICATIONS.order.category'
            reorder_indicator:
              $ref: '#/components/schemas/reorder_indicator_AUTHENTICATIONS.order.reorder_indicator'
        browser_data:
          type: object
          properties:
            language:
              $ref: '#/components/schemas/language_AUTHENTICATIONS.browser_date.language'
            accept_header:
              $ref: '#/components/schemas/accept_header_AUTHENTICATIONS.browser_date.accept_header'
            user_agent:
              $ref: '#/components/schemas/user_agent_AUTHENTICATIONS.browser_date.user_agent'
            color_depth:
              $ref: '#/components/schemas/color_depth_AUTHENTICATIONS.browser_date.color_depth'
            ip:
              $ref: '#/components/schemas/ip_AUTHENTICATIONS.browser_date.ip'
            java_enabled:
              $ref: '#/components/schemas/java_enabled_AUTHENTICATIONS.browser_date.java_enabled'
            javascript_enabled:
              $ref: '#/components/schemas/javascript_enabled_AUTHENTICATIONS.browser_date.javascript_enabled'
            screen_height:
              $ref: '#/components/schemas/screen_height_AUTHENTICATIONS.browser_date.screen_height'
            screen_width:
              $ref: '#/components/schemas/screen_width_AUTHENTICATIONS.browser_date.screen_width'
            challenge_window_size:
              $ref: '#/components/schemas/challenge_window_size_AUTHENTICATIONS.browser_date.challenge_window_size'
            timezone:
              $ref: '#/components/schemas/timezone_AUTHENTICATIONS.browser_date.timezone'
        method_url_completion_status:
          $ref: '#/components/schemas/method_url_completion_status_AUTHENTICATIONS.method_url_completion_status'
        message_category:
          $ref: '#/components/schemas/message_category_AUTHENTICATIONS.three_ds.message_category'
        stored_credential:
          type: object
          properties:
            model:
              $ref: '#/components/schemas/model_AUTHENTICATIONS.stored_credential.model'
        payer:
          type: object
          properties:
            name:
              $ref: '#/components/schemas/name_AUTHENTICATIONS.payer.name'
            reference:
              $ref: '#/components/schemas/reference_AUTHENTICATIONS.payer.reference'
            date_of_birth:
              $ref: '#/components/schemas/date_of_birth_AUTHENTICATIONS.payer.date_of_birth'
            account_age:
              $ref: '#/components/schemas/account_age_AUTHENTICATIONS.payer.account_age'
            account_creation_date:
              $ref: '#/components/schemas/account_creation_date_AUTHENTICATIONS.payer.account_creation_date'
            account_change_date:
              $ref: '#/components/schemas/account_change_date_AUTHENTICATIONS.payer.account_change_date'
            account_change_indicator:
              $ref: '#/components/schemas/account_change_indicator_AUTHENTICATIONS.payer.account_change_indicator'
            account_password_change_date:
              $ref: '#/components/schemas/account_password_change_date_AUTHENTICATIONS.payer.account_password_change_date'
            account_password_change_indicator:
              $ref: '#/components/schemas/account_change_indicator_AUTHENTICATIONS.payer.account_change_indicator'
            landline_phone:
              $ref: '#/components/schemas/landline_phone_AUTHENTICATIONS.payer.landline_phone'
            mobile_phone:
              $ref: '#/components/schemas/mobile_phone_AUTHENTICATIONS.payer.mobile_phone'
            email:
              $ref: '#/components/schemas/email_AUTHENTICATIONS.payer.email'
            billing_address:
              type: object
              description: "The billing address of the payer.\r\nNote for European merchants- All billing fields are recommended for SCA."
              properties:
                line_1:
                  $ref: '#/components/schemas/line_1_AUTHENTICATIONS.order.shipping_address.line_1'
                line_2:
                  $ref: '#/components/schemas/line_2_AUTHENTICATIONS.order.shipping_address.line_2'
                line_3:
                  $ref: '#/components/schemas/line_3_AUTHENTICATIONS.order.shipping_address.line_3'
                city:
                  $ref: '#/components/schemas/city_AUTHENTICATIONS.order.shipping_address.city'
                state:
                  $ref: '#/components/schemas/state_AUTHENTICATIONS.order.shipping_address.state'
                postal_code:
                  $ref: '#/components/schemas/postal_code_AUTHENTICATIONS.order.shipping_address.postal_code'
                country:
                  $ref: '#/components/schemas/country_AUTHENTICATIONS.order.shipping_address.country'
            home_phone:
              type: object
              properties:
                country_code:
                  $ref: '#/components/schemas/country_code_AUTHENTICATIONS.payer.home_phone.country_code'
                subscriber_number:
                  $ref: '#/components/schemas/subscriber_number_AUTHENTICATIONS.payer.home_phone.subscriber_number'
            work_phone:
              type: object
              properties:
                country_code:
                  $ref: '#/components/schemas/country_code_AUTHENTICATIONS.payer.work_phone.country_code'
                subscriber_number:
                  $ref: '#/components/schemas/subscriber_number_AUTHENTICATIONS.payer.home_phone.subscriber_number'
            payment_account_creation_date:
              $ref: '#/components/schemas/payment_account_creation_date_AUTHENTICATIONS.payer.payment_account_creation_date'
            payment_account_age_indicator:
              $ref: '#/components/schemas/payment_account_age_indicator_AUTHENTICATIONS.payer.payment_account_age_indicator'
            suspicious_account_activity:
              $ref: '#/components/schemas/suspicious_account_activity_AUTHENTICATIONS.payer.suspicious_account_activity'
            purchases_last_6months_count:
              $ref: '#/components/schemas/purchases_last_6months_count_AUTHENTICATIONS.payer.purchases_last_6months_count'
            transactions_last_24hours_count:
              $ref: '#/components/schemas/transactions_last_24hours_count_AUTHENTICATIONS.payer.transactions_last_24hours_count'
            shipping_address_time_created_reference:
              $ref: '#/components/schemas/shipping_address_time_created_reference_AUTHENTICATIONS.payer.shipping_address_time_created_reference'
            shipping_address_creation_indicator:
              $ref: '#/components/schemas/shipping_address_creation_indicator_AUTHENTICATIONS.payer.shipping_address_creation_indicator'
        payer_login_data:
          type: object
          properties:
            authentication_timestamp:
              $ref: '#/components/schemas/authentication_timestamp_AUTHENTICATIONS.payer_login_data.authentication_timestamp'
            authentication_type:
              $ref: '#/components/schemas/authentication_type_AUTHENTICATIONS.payer_login_data.authentication_type'
        payer_prior_three_ds_authentication_data:
          type: object
          properties:
            authentication_method:
              $ref: '#/components/schemas/authentication_method_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_method'
            acs_transaction_reference:
              $ref: '#/components/schemas/acs_transaction_reference_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.acs_transaction_reference'
            authentication_timestamp:
              $ref: '#/components/schemas/authentication_timestamp_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_timestamp'
            authentication_data:
              $ref: '#/components/schemas/authentication_data_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_data'
        recurring_authorization_data:
          type: object
          properties:
            max_number_of_instalments:
              $ref: '#/components/schemas/max_number_of_instalments_AUTHENTICATIONS.recurring_authorization_data.max_number_of_instalments'
            frequency:
              $ref: '#/components/schemas/frequency_AUTHENTICATIONS.recurring_authorization_data.frequency'
            expiry_date:
              $ref: '#/components/schemas/expiry_date_AUTHENTICATIONS.recurring_authorization_data.expiry_date'
      required:
        - three_ds
        - merchant_contact_url
        - payment_method
        - order
        - browser_data
    source_AUTHENTICATIONS.three_ds.source:
      type: string
      enum:
        - BROWSER
        - MERCHANT_INITIATED
        - MOBILE_SDK
      description: |
        Indicates the type of system used to initiate the authentication.
            * `BROWSER
            * `MERCHANT_INITIATED`
            * `MOBILE_SDK`
      minLength: 1
      maxLength: 50
      example: BROWSER
    preference_AUTHENTICATIONS.three_ds.preference:
      type: string
      enum:
        - NO_PREFERENCE
        - NO_CHALLENGE_REQUESTED
        - CHALLENGE_PREFERRED
        - CHALLENGE_MANDATED
        - NO_CHALLENGE_REQUESTED_TRANSACTION_RISK_ANALYSIS_PERFORMED
        - NO_CHALLENGE_REQUESTED_DATA_SHARE_ONLY
        - NO_CHALLENGE_REQUESTED_SCA_ALREADY_PERFORMED
        - NO_CHALLENGE_REQUESTED_WHITELIST
        - CHALLENGE_REQUESTED_PROMPT_FOR_WHITELIST
      description: |
        Indicates whether a challenge is requested for this transaction. The Issuer may override whatever preference is specified in this field.  
                         * `NO_PREFERENCE` - No preference as to whether the customer is challenged 
                         * `NO_CHALLENGE_REQUESTED` - Preference is for the customer not be challenged 
                         * `CHALLENGE_PREFERRED` - Preference is for the customer to be challenged. 
                         * `CHALLENGE_MANDATED` - A challenge is required for the transaction to be authorized due to local/regional mandates or other variables. NO_CHALLENGE_REQUESTED_TRANSACTION_RISK_ANALYSIS_PERFORMED
                         * `NO_CHALLENGE_REQUESTED_DATA_SHARE_ONLY`
                         * `NO_CHALLENGE_REQUESTED_SCA_ALREADY_PERFORMED`
                         * `NO_CHALLENGE_REQUESTED_WHITELIST`
                         * `CHALLENGE_REQUESTED_PROMPT_FOR_WHITELIST`
      minLength: 1
      maxLength: 50
      example: NO_PREFERENCE
    merchant_contact_url_AUTHENTICATIONS.merchant_contact_url:
      type: string
      description: The url of the website that shows the merchant's contact details.
    reference_AUTHENTICATIONS.order.reference:
      type: string
      description: The merchant's reference for the order the transaction is associated with..
      minLength: 1
      maxLength: 50
      example: INV#88547
    time_created_reference_AUTHENTICATIONS.order.time_created_reference:
      type: string
      description: Merchant defined time the order was created.
      minLength: 1
      maxLength: 50
    amount_AUTHENTICATIONS.order.amount:
      type: string
      description: The total amount of the order.
      minLength: 1
      maxLength: 50
    currency_AUTHENTICATIONS.order.currency:
      type: string
      enum:
        - USD
        - EUR
        - CAD
        - AFN
        - DZD
        - ARS
        - AMD
        - AWG
        - AUD
        - AZN
        - BSD
        - BHD
        - THB
        - PAB
        - BBD
        - BYN
        - BZD
        - BMD
        - VEF
        - BOB
        - BRL
        - BND
        - BGN
        - BIF
        - CVE
        - CLP
        - COP
        - KMF
        - CDF
        - NIO
        - CRC
        - CUP
        - CZK
        - GMD
        - DKK
        - MKD
        - DJF
        - STD
        - DOP
        - VND
        - XCD
        - EGP
        - SVC
        - ETB
        - FKP
        - FJD
        - HUF
        - GHS
        - GIP
        - HTG
        - PYG
        - GNF
        - GYD
        - HKD
        - UAH
        - ISK
        - INR
        - IRR
        - IQD
        - JMD
        - JOD
        - KES
        - PGK
        - HRK
        - KWD
        - AOA
        - MMK
        - LAK
        - GEL
        - LBP
        - ALL
        - HNL
        - SLL
        - LRD
        - LYD
        - SZL
        - LSL
        - MGA
        - MWK
        - MYR
        - MUR
        - MXN
        - MDL
        - MAD
        - MZN
        - BOV
        - NGN
        - ERN
        - NAD
        - NPR
        - ANG
        - ILS
        - TWD
        - NZD
        - BTN
        - KPW
        - NOK
        - MRO
        - TOP
        - PKR
        - MOP
        - CUC
        - UYU
        - PHP
        - GBP
        - BWP
        - QAR
        - GTQ
        - ZAR
        - OMR
        - KHR
        - RON
        - MVR
        - IDR
        - RUB
        - RWF
        - SHP
        - SAR
        - RSD
        - SCR
        - SGD
        - PEN
        - SBD
        - KGS
        - SOS
        - TJS
        - SSP
        - LKR
        - XSU
        - SDG
        - SRD
        - SEK
        - CHF
        - SYP
        - BDT
        - WST
        - TZS
        - KZT
        - TTD
        - MNT
        - TND
        - TRY
        - TMT
        - AED
        - UGX
        - CLF
        - COU
        - UZS
        - VUV
        - KRW
        - YER
        - JPY
        - CNY
        - ZMW
        - ZWL
        - PLN
      description: 'The currency of the amount in ISO-4217(alpha-3).Please click on <a href="https://developer.globalpay.com/resources/codes/currency-codes" target="_blank">Currency Codes</a> to access the full list of currencies'
      minLength: 3
      maxLength: 3
      example: USD
    address_match_indicator_AUTHENTICATIONS.order.address_match_indicator:
      type: string
      enum:
        - 'YES'
        - 'NO'
      description: |
        Indicates whether the shipping address matches the billing address.
         * `YES`
         * `NO`
         Note for European merchants- This field is recommended for SCA.
      minLength: 1
      maxLength: 50
      example: 'YES'
    line_1_AUTHENTICATIONS.order.shipping_address.line_1:
      type: string
      description: First line of the address.
      minLength: 1
      maxLength: 50
      example: 123 Merchant Street
    line_2_AUTHENTICATIONS.order.shipping_address.line_2:
      type: string
      description: Second line of the address.
      minLength: 1
      maxLength: 50
      example: Suite 2
    line_3_AUTHENTICATIONS.order.shipping_address.line_3:
      type: string
      description: Third line of the address
      minLength: 1
      maxLength: 50
      example: foyer
    city_AUTHENTICATIONS.order.shipping_address.city:
      type: string
      description: The city associated with the address.
      minLength: 1
      maxLength: 50
      example: Beverly Hills
    state_AUTHENTICATIONS.order.shipping_address.state:
      type: string
      description: 'The state or region of the address. ISO 3166-2 minus the country code itself. For example, US Illinois = IL, or in the case of GB counties Wiltshire = WI or Aberdeenshire = ABD'
      minLength: 1
      maxLength: 50
      example: CA
    postal_code_AUTHENTICATIONS.order.shipping_address.postal_code:
      type: string
      description: The postal code of the address.
      minLength: 1
      maxLength: 50
      example: 90210'
    country_AUTHENTICATIONS.order.shipping_address.country:
      type: string
      description: This is the country of the address represented as in ISO-3166-1(alpha-2 code) format.
      minLength: 2
      maxLength: 2
      example: US
    gift_card_count_AUTHENTICATIONS.order.gift_card_count:
      type: number
      description: The total number of prepaid or gift cards purchased.
    gift_card_amount_AUTHENTICATIONS.order.gift_card_amount:
      type: string
      description: The amount of the gift card.
      minLength: 1
      maxLength: 50
    gift_card_currency_AUTHENTICATIONS.order.gift_card_currency:
      type: string
      enum:
        - EUR
        - USD
        - CAD
      description: The currency of the gift card amount in ISO-4217(alpha-3)
      minLength: 3
      maxLength: 3
    delivery_email_AUTHENTICATIONS.order.delivery_email:
      type: string
      description: |
        For ELECTRONIC_DELIVERY, the email address to which the merchandise was delivered. The field must be submitted in the form name@host.domain.  Note for European merchants - This field is recommended for SCA.
      minLength: 1
      maxLength: 100
    delivery_timeframe_AUTHENTICATIONS.order.delivery_timeframe:
      type: string
      enum:
        - ELECTRONIC_DELIVERY
        - SAME_DAY
        - OVERNIGHT
        - TWO_DAYS_OR_MORE
      description: |
        Indicates the delivery timeframe for the order.
             * `ELECTRONIC_DELIVERY`
             * `SAME_DAY`
             * `OVERNIGHT`
             * `TWO_DAYS_OR_MORE`
      minLength: 1
      maxLength: 50
      example: ELECTRONIC_DELIVERY
    shipping_method_AUTHENTICATIONS.order.shipping_method:
      type: string
      enum:
        - BILLING_ADDRESS
        - ANOTHER_VERIFIED_ADDRESS
        - UNVERIFIED_ADDRESS
        - SHIP_TO_STORE
        - DIGITAL_GOODS
        - TRAVEL_AND_EVENT_TICKETS
        - OTHER
      description: |
        Indicates shipping method chosen for the transaction. Must be specific to this transaction, not generally to the merchant. If one or more items are included in the sale, use the Shipping Indicator code for the physical goods. If all the goods are digital, use the Shipping Method code that describes the most expensive item.
            * `BILLING_ADDRESS`
            * `ANOTHER_VERIFIED_ADDRESS`
            * `UNVERIFIED_ADDRESS`
            * `SHIP_TO_STORE`
            * `DIGITAL_GOODS`
            * `TRAVEL_AND_EVENT_TICKETS`
            * `OTHER`
      minLength: 1
      maxLength: 50
      example: BILLING_ADDRESS
    shipping_name_matches_cardholder_name_AUTHENTICATIONS.order.shipping_name_matches_cardholder_name:
      type: string
      enum:
        - 'YES'
        - 'NO'
      description: |
        Indicates whether the account customer name matches the shipping address name.
            * `YES`
            * `NO`
      minLength: 1
      maxLength: 50
      example: 'YES'
    preorder_indicator_AUTHENTICATIONS.order.preorder_indicator:
      type: string
      enum:
        - MERCHANDISE_AVAILABLE
        - FUTURE_AVAILABILITY
      description: |
        Indicates whether the customer is paying for merchandise that will be available at a future date.
             * `MERCHANDISE_AVAILABLE`
             * `FUTURE_AVAILABILITY`
      minLength: 1
      maxLength: 50
      example: MERCHANDISE_AVAILABLE
    preorder_availability_date_AUTHENTICATIONS.order.preorder_availability_date:
      type: string
      description: In the case of a pre order; the expected date when the merchandise will be available.
    category_AUTHENTICATIONS.order.category:
      type: string
      description: The type of order being authenticated.
      example: GOODS_SERVICE_PURCHASE|CHECK_ACCEPTANCE|ACCOUNT_FUNDING|QUASI_CASH_TRANSACTION|PREPAID_ACTIVATION_AND_LOAD
    reorder_indicator_AUTHENTICATIONS.order.reorder_indicator:
      type: string
      enum:
        - FIRST_TIME_ORDER
        - REORDER
      description: |
        The type of order being authenticated.
          * `FIRST_TIME_ORDER`
          * `REORDER`
      minLength: 1
      maxLength: 50
      example: REORDER
    language_AUTHENTICATIONS.browser_date.language:
      type: string
      description: The language the browser is set to.
      minLength: 1
      maxLength: 50
    accept_header_AUTHENTICATIONS.browser_date.accept_header:
      type: string
      description: HTTP accept headers as sent by the browser.
      minLength: 1
      maxLength: 100
    user_agent_AUTHENTICATIONS.browser_date.user_agent:
      type: string
      description: Exact content of the HTTP user-agent header sent by the browser.
      minLength: 1
      maxLength: 200
    color_depth_AUTHENTICATIONS.browser_date.color_depth:
      type: string
      enum:
        - ONE_BIT
        - TWO_BITS
        - FOUR_BITS
        - EIGHT_BITS
        - FIFTEEN_BITS
        - SIXTEEN_BITS
        - TWENTY_FOUR_BITS
        - THIRTY_TWO_BITS
        - FORTY_EIGHT_BITS
      description: |
        Browser color depth.
           * `ONE_BIT`
           * `TWO_BITS`
           * `FOUR_BITS`
           * `EIGHT_BITS`
           * `FIFTEEN_BITS`
           * `SIXTEEN_BITS`
           * `TWENTY_FOUR_BITS`
           * `THIRTY_TWO_BITS`
           * `FORTY_EIGHT_BITS`
      minLength: 1
      maxLength: 50
      example: ONE_BIT
    ip_AUTHENTICATIONS.browser_date.ip:
      type: string
      description: |
        Exact content of the HTTP user-agent header sent by the browser.
        Note for European merchants: This field is mandatory for SCA.
      minLength: 1
      maxLength: 50
    java_enabled_AUTHENTICATIONS.browser_date.java_enabled:
      type: string
      enum:
        - 'TRUE'
        - 'FALSE'
      description: whether the browser can execute Java.
      minLength: 1
      maxLength: 50
      example: 'TRUE'
    javascript_enabled_AUTHENTICATIONS.browser_date.javascript_enabled:
      type: string
      enum:
        - 'TRUE'
        - 'FALSE'
      description: whether the browser can execute JavaScript.
      minLength: 1
      maxLength: 50
      example: 'TRUE'
    screen_height_AUTHENTICATIONS.browser_date.screen_height:
      type: string
      description: |
        Total height of the customer's screen in pixels. 
        Note for European merchants: This field is mandatory for SCA.
      minLength: 1
      maxLength: 50
    screen_width_AUTHENTICATIONS.browser_date.screen_width:
      type: string
      description: |
        Total width of the customer's screen in pixels.  Note for European merchants: This field is mandatory for SCA.
      minLength: 1
      maxLength: 50
    challenge_window_size_AUTHENTICATIONS.browser_date.challenge_window_size:
      type: string
      description: |
        Dimensions of the challenge window that has been displayed to the customer. The ACS shall reply with content that is formatted to appropriately.        
           * `WINDOWED_250X400`
           * `WINDOWED_390X400`
           * `WINDOWED_500X600`
           * `WINDOWED_600X400`
           * `FULL_SCREEN`
      minLength: 1
      maxLength: 50
      example: WINDOWED_250X400
    timezone_AUTHENTICATIONS.browser_date.timezone:
      type: string
      description: 'Time difference between UTC time and the customer''s browser local time, in minutes.'
      minLength: 1
      maxLength: 50
    method_url_completion_status_AUTHENTICATIONS.method_url_completion_status:
      type: string
      enum:
        - 'YES'
        - 'NO'
      description: |
        Indicates whether the 3DS Method was completed successfully.
          * `YES`
          * `NO`
      minLength: 1
      maxLength: 50
      example: 'YES'
    model_AUTHENTICATIONS.stored_credential.model:
      type: string
      enum:
        - UNSCHEDULED
        - RECURRING
        - SUBSCRIPTION
        - INSTALLMENT
        - ADD_PAYMENT_METHOD
        - MAINTAIN_PAYMENT_METHOD
        - MAINTAIN_PAYMENT_VERIFICATION
        - SPLIT_OR_DELAYED_SHIPMENT
        - TOP_UP
        - MAIL_ORDER
        - TELEPHONE_ORDER
        - WHITELIST_STATUS_CHECK
        - OTHER_PAYMENT
        - BILLING_AGREEMENT
      description: |
        Indicates the transaction processing model being executed when using stored credentials for merchant initiated transactions:
          * `UNSCHEDULED`
          * `RECURRING`
          * `SUBSCRIPTION` 
          * `ADD_PAYMENT_METHOD`  
          * `MAINTAIN_PAYMENT_METHOD`  
          * `MAINTAIN_PAYMENT_VERIFICATION`  
          * `SPLIT_OR_DELAYED_SHIPMENT`  
          * `TOP_UP`
          * `MAIL_ORDER`  
          * `TELEPHONE_ORDER`  
          * `WHITELIST_STATUS_CHECK`  
          * `OTHER_PAYMENT`
          * `BILLING_AGREEMENT`
      minLength: 1
      maxLength: 50
      example: RECURRING
    name_AUTHENTICATIONS.payer.name:
      type: string
      description: The full name of the payer.
      minLength: 1
      maxLength: 50
    reference_AUTHENTICATIONS.payer.reference:
      type: string
      description: An integrator's reference to the payer.
      minLength: 1
      maxLength: 50
    date_of_birth_AUTHENTICATIONS.payer.date_of_birth:
      type: string
      description: |
        The date of birth of the payer
        Note for European merchants: This field is recommended for SCA.
    account_age_AUTHENTICATIONS.payer.account_age:
      type: string
      enum:
        - NO_ACCOUNT
        - THIS_TRANSACTION
        - LESS_THAN_THIRTY_DAYS
        - THIRTY_TO_SIXTY_DAYS
        - MORE_THEN_SIXTY_DAYS
      description: |
        Length of time the customer has had an account with the merchant.        
           * `NO_ACCOUNT`
           * `THIS_TRANSACTION`
           * `LESS_THAN_THIRTY_DAYS`
           * `THIRTY_TO_SIXTY_DAYS`
           * `MORE_THEN_SIXTY_DAYS`
           Note for European merchants: This field is recommended for SCA.
      minLength: 1
      maxLength: 50
      example: NO_ACCOUNT
    account_creation_date_AUTHENTICATIONS.payer.account_creation_date:
      type: string
      description: Date the customer opened their account with the merchant.
    account_change_date_AUTHENTICATIONS.payer.account_change_date:
      type: string
      description: 'Date the customer''s account with the merchant was last changed. For example, if the billing or shipping details changed, new payment account or new users added.'
    account_change_indicator_AUTHENTICATIONS.payer.account_change_indicator:
      type: string
      enum:
        - THIS_TRANSACTION
        - LESS_THAN_THIRTY_DAYS
        - THIRTY_TO_SIXTY_DAYS
        - MORE_THEN_SIXTY_DAYS
      description: |
        Length of time since the account has changed.
            * `THIS_TRANSACTION`
            * `LESS_THAN_THIRTY_DAYS`
            * `THIRTY_TO_SIXTY_DAYS`
            * `MORE_THEN_SIXTY_DAYS`
      minLength: 1
      maxLength: 50
      example: THIS_TRANSACTION
    account_password_change_date_AUTHENTICATIONS.payer.account_password_change_date:
      type: string
      description: Date the customer's account with the merchant had a password change or account reset.
    landline_phone_AUTHENTICATIONS.payer.landline_phone:
      type: string
      description: The landline phone number.
    mobile_phone_AUTHENTICATIONS.payer.mobile_phone:
      type: string
      description: |
        The mobile phone number.
        Note for European merchants: This field is mandatory for SCA.
    email_AUTHENTICATIONS.payer.email:
      type: string
      title: email_AUTHENTICATIONS.payer.email
      description: 'The email of the Payer '
    country_code_AUTHENTICATIONS.payer.home_phone.country_code:
      type: string
      description: |

        The country code that is used when dialling the phone number from another country.  For example  for USA or Canada  it would be +1 for England it would be +44 for Germany it would be +49
        Note for European merchants: This field is mandatory for SCA unless customer Email is being sent by the Merchant. 
      minLength: 1
      maxLength: 50
    subscriber_number_AUTHENTICATIONS.payer.home_phone.subscriber_number:
      type: string
      description: |
        The phone number. 
        Note for European merchants: This field is mandatory for SCA unless customer Email is being sent by the Merchant. Global Payments recommend you to send at least one phone number (Mobile, Home or Work). 
      minLength: 1
      maxLength: 50
    country_code_AUTHENTICATIONS.payer.work_phone.country_code:
      type: string
      description: |
        The country code that is used when dialling the phone number from another country. 
        For example  for USA or Canada  it would be +1 for England it would be +44 for Germany it would be +49 Note for European merchants: This field is mandatory for SCA unless customer Email is being sent by the Merchant. 
      minLength: 1
      maxLength: 50
    payment_account_creation_date_AUTHENTICATIONS.payer.payment_account_creation_date:
      type: string
      description: Date the payment account was associated with the customer's account.
    payment_account_age_indicator_AUTHENTICATIONS.payer.payment_account_age_indicator:
      type: string
      enum:
        - NO_ACCOUNT
        - THIS_TRANSACTION
        - LESS_THAN_THIRTY_DAYS
        - THIRTY_TO_SIXTY_DAYS.
        - MORE_THEN_SIXTY_DAYS
      description: |
        Length of time the customer has had an account with the merchant.
            * `NO_ACCOUNT`
            * `THIS_TRANSACTION`
            * `LESS_THAN_THIRTY_DAYS`
            * `THIRTY_TO_SIXTY_DAYS`
            * `MORE_THEN_SIXTY_DAYS`
      minLength: 1
      maxLength: 50
      example: NO_ACCOUNT
    suspicious_account_activity_AUTHENTICATIONS.payer.suspicious_account_activity:
      type: string
      enum:
        - SUSPICIOUS_ACTIVITY
        - NO_SUSPICIOUS_ACTIVITY
      description: |
        Indicates whether there has been suspicious activity on this customer's account, including fraudulent activity.        
            * `SUSPICIOUS_ACTIVITY`
            * `NO_SUSPICIOUS_ACTIVITY`
          Note for European merchants - This field is recommended for SCA.
      minLength: 1
      maxLength: 50
      example: SUSPICIOUS_ACTIVITY
    purchases_last_6months_count_AUTHENTICATIONS.payer.purchases_last_6months_count:
      type: number
      description: Number of purchases with this customer's account during the previous six months. Note for European merchants - This field is recommended for SCA.
    transactions_last_24hours_count_AUTHENTICATIONS.payer.transactions_last_24hours_count:
      type: number
      description: Number of transactions (successful and abandoned) for this customer account with the merchant in the previous 24 hours. Note for European merchants - This field is recommended for SCA.
    shipping_address_time_created_reference_AUTHENTICATIONS.payer.shipping_address_time_created_reference:
      type: string
      description: Date the shipping address was first used with the merchant.
    shipping_address_creation_indicator_AUTHENTICATIONS.payer.shipping_address_creation_indicator:
      type: string
      enum:
        - THIS_TRANSACTION
        - LESS_THAN_THIRTY_DAYS
        - THIRTY_TO_SIXTY_DAYS
        - MORE_THEN_SIXTY_DAYS
      description: |
        When the shipping address was first used with the merchant.
            * `THIS_TRANSACTION`
            * `LESS_THAN_THIRTY_DAYS`
            * `THIRTY_TO_SIXTY_DAYS`
            * `MORE_THEN_SIXTY_DAYS`
      minLength: 1
      maxLength: 50
      example: LESS_THAN_THIRTY_DAYS
    authentication_timestamp_AUTHENTICATIONS.payer_login_data.authentication_timestamp:
      type: string
      description: 'The timestamp of the authentication with the merchant. Minimum of 3 microseconds precision, can be up to 6. Must also include timezone.'
      format: date-time
    authentication_type_AUTHENTICATIONS.payer_login_data.authentication_type:
      type: string
      enum:
        - NOT_AUTHENTICATED
        - MERCHANT_SYSTEM_AUTHENTICATION
        - FEDERATED_ID_AUTHENTICATION
        - ISSUER_CREDENTIAL_AUTHENTICATION
        - THIRD_PARTY_AUTHENTICATION
        - FIDO_AUTHENTICATION
      description: |
        Method used by the customer to previously authenticate with the merchant.
            * `NOT_AUTHENTICATED`
            * `MERCHANT_SYSTEM_AUTHENTICATION`
            * `FEDERATED_ID_AUTHENTICATION`
            * `ISSUER_CREDENTIAL_AUTHENTICATION`
            * `THIRD_PARTY_AUTHENTICATION`
             * `FIDO_AUTHENTICATION`
             Note for European merchants: This field is recommended for SCA.
      minLength: 1
      maxLength: 50
      example: NOT_AUTHENTICATED
    authentication_method_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_method:
      type: string
      enum:
        - FRICTIONLESS_AUTHENTICATION
        - CHALLENGE_OCCURRED
        - AVS_VERIFIED
        - OTHER_ISSUER_METHOD
      description: |
        Method used by the customer previously to authenticate.
            * `FRICTIONLESS_AUTHENTICATION`
            * `CHALLENGE_OCCURRED`
            * `AVS_VERIFIED`
            * `OTHER_ISSUER_METHOD`
      minLength: 1
      maxLength: 50
      example: FRICTIONLESS_AUTHENTICATION
    acs_transaction_reference_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.acs_transaction_reference:
      type: string
      description: ACS Transaction ID for a prior 3DS authenticated transaction.
      minLength: 1
      maxLength: 50
    authentication_timestamp_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_timestamp:
      type: string
      description: 'Date and time in UTC of the prior customer authentication. Minimum of 3 microseconds precision, can be up to 6. Must also include timezone. Note for European merchants - This field is recommended for SCA.'
      format: date-time
    authentication_data_AUTHENTICATIONS.payer_prior_three_ds_authentication_data.authentication_data:
      type: string
      description: Data that documents and supports a specific authentication process.
      minLength: 1
      maxLength: 50
    max_number_of_instalments_AUTHENTICATIONS.recurring_authorization_data.max_number_of_instalments:
      type: string
      description: Indicates the maximum number of authorizations permitted for instalment payments.
    frequency_AUTHENTICATIONS.recurring_authorization_data.frequency:
      type: string
      description: The minimum number of days between recurring authorizations.
      minLength: 1
      maxLength: 50
    expiry_date_AUTHENTICATIONS.recurring_authorization_data.expiry_date:
      type: string
      description: Date after which no further recurring authorizations shall be performed.
    initiate_response:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        time_created:
          $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
        time_last_updated:
          $ref: '#/components/schemas/time_last_updated_AUTHENTICATIONS.time_last_updated'
        transaction_type:
          $ref: '#/components/schemas/transaction_type_AUTHENTICATIONS.transaction_type'
        status:
          $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        source:
          $ref: '#/components/schemas/source_AUTHENTICATIONS.source'
        three_ds:
          type: object
          properties:
            server_trans_ref:
              $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
            acs_trans_ref:
              $ref: '#/components/schemas/acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref'
            acs_reference_number:
              $ref: '#/components/schemas/acs_reference_number_AUTHENTICATIONS.three_ds.acs_reference_number'
            ds_trans_ref:
              $ref: '#/components/schemas/ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref'
            eci:
              $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
            liability_shift:
              $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
            status:
              $ref: '#/components/schemas/status_AUTHENTICATIONS.three_ds.status'
            status_reason:
              $ref: '#/components/schemas/status_reason_AUTHENTICATIONS.three_ds.status_reason'
            authentication_source:
              $ref: '#/components/schemas/authentication_source_AUTHENTICATION.three_ds.authentication_source'
            message_version:
              $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
            authentication_value:
              $ref: '#/components/schemas/authentication_value_AUTHENTICATIONS.three_ds.authentication_value'
            cardholder_response_info:
              $ref: '#/components/schemas/cardholder_response_info_AUTHENTICATIONS.three_ds.cardholder_response_info'
            message_category:
              $ref: '#/components/schemas/message_category_AUTHENTICATIONS.three_ds.message_category'
            redirect_url:
              $ref: '#/components/schemas/redirect_url_AUTHENTICATIONS.three_ds.redirect_url'
            acs_challenge_request_url:
              $ref: '#/components/schemas/acs_challenge_request_url_AUTHENTICATIONS.three_ds.acs_challenge_request_url'
            challenge_status:
              $ref: '#/components/schemas/challenge_status_AUTHENTICATIONS.three_ds.challenge_status'
            challenge_model:
              $ref: '#/components/schemas/challenge_model_AUTHENTICATIONS.three_ds.challenge_model'
            session_data_field_name:
              $ref: '#/components/schemas/session_data_field_name_AUTHENTICATIONS.three_ds.session_data_field_name'
            message_type:
              $ref: '#/components/schemas/message_type_AUTHENTICATIONS.three_ds.message_type'
            challenge_value:
              $ref: '#/components/schemas/challenge_value_AUTHENTICATIONS.three_ds.challenge_value'
        notifications:
          type: object
          properties:
            challenge_return_url:
              $ref: '#/components/schemas/challenge_return_url_AUTHENTICATIONS.notifications.challenge_return_url'
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.action.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_AUTHENTICATIONS.action.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
    time_last_updated_AUTHENTICATIONS.time_last_updated:
      type: string
      description: Global Payments generated time indicating when the object was last updated in ISO-8601 format.
      example: '2021-05-03T21:23:39.718Z'
    acs_reference_number_AUTHENTICATIONS.three_ds.acs_reference_number:
      type: string
      description: Reference Number assigned by the ACS.
      minLength: 1
      maxLength: 50
    authentication_source_AUTHENTICATION.three_ds.authentication_source:
      type: string
      enum:
        - BROWSER
        - MERCHANT_INITIATED
        - MOBILE_SDK
      title: authentication_source_AUTHENTICATION.three_ds.authentication_source
      description: Indicates the type of channel used to initiate the transaction.
    cardholder_response_info_AUTHENTICATIONS.three_ds.cardholder_response_info:
      type: string
      description: 'Optional text provided by the ACS/Issuer to the customer during a frictionless transaction that was not authenticated. For example, a customer care phone number to call.'
      minLength: 1
      maxLength: 50
    obtain_result_request:
      type: object
      properties:
        three_ds:
          type: object
          properties:
            challenge_result_value:
              $ref: '#/components/schemas/challenge_result_value_AUTHENTICATIONS.challenge_result_value'
    challenge_result_value_AUTHENTICATIONS.challenge_result_value:
      type: string
      title: challenge_result_value_AUTHENTICATIONS.challenge_result_value
      description: The value retrieved from the ACS once 3DS authentication stpe completed and is needed to obtain the result of the authentication.
      maxLength: 10000
    result_response:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        time_created:
          $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
        status:
          $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        source:
          $ref: '#/components/schemas/source_AUTHENTICATIONS.source'
        three_ds:
          type: object
          properties:
            acs_trans_ref:
              $ref: '#/components/schemas/acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref'
            ds_trans_ref:
              $ref: '#/components/schemas/ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref'
            server_trans_ref:
              $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
            acs_reference_number:
              $ref: '#/components/schemas/acs_reference_number_AUTHENTICATIONS.three_ds.acs_reference_number'
            liability_shift:
              $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
            authentication_type:
              $ref: '#/components/schemas/authentication_type_AUTHENTICATIONS.three_ds.authentication_type'
            authentication_value:
              $ref: '#/components/schemas/authentication_value_AUTHENTICATIONS.three_ds.authentication_value'
            eci:
              $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
            status:
              $ref: '#/components/schemas/status_AUTHENTICATIONS.three_ds.status'
            status_reason:
              $ref: '#/components/schemas/status_reason_AUTHENTICATIONS.three_ds.status_reason'
            redirect_url:
              $ref: '#/components/schemas/redirect_url_AUTHENTICATIONS.three_ds.redirect_url'
            acs_challenge_request_url:
              $ref: '#/components/schemas/acs_challenge_request_url_AUTHENTICATIONS.three_ds.acs_challenge_request_url'
            authentication_request_type:
              $ref: '#/components/schemas/authentication_request_type_AUTHENTICATIONS.three_ds.authentication_request_type'
            acs_decoupled_response_indicator:
              $ref: '#/components/schemas/acs_decoupled_response_indicator_AUTHENTICATIONS.three_ds.acs_decoupled_response_indicator'
            whitelist_status:
              $ref: '#/components/schemas/whitelist_status_AUTHENTICATIONS.three_ds.whitelist_status'
            message_extension:
              $ref: '#/components/schemas/message_extension_AUTHENTICATIONS.three_ds.message_extension'
        notifications:
          type: object
          properties:
            challenge_return_url:
              $ref: '#/components/schemas/challenge_return_url_AUTHENTICATIONS.notifications.challenge_return_url'
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.action.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_AUTHENTICATIONS.action.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
    authentication_type_AUTHENTICATIONS.three_ds.authentication_type:
      type: string
      enum:
        - STATIC_CHALLENGE
        - DYNAMIC_CHALLENGE
        - OUT_OF_BAND_CHALLENGE
        - DECOUPLED
      description: |
        Indicates the type of authentication method the Issuer will use to challenge the customer.
              * `STATIC_CHALLENGE`
              * `DYNAMIC_CHALLENGE`
              * `OUT_OF_BAND_CHALLENGE`
              * `DECOUPLED`
      minLength: 1
      maxLength: 50
      example: STATIC_CHALLENGE
    authentication_request_type_AUTHENTICATIONS.three_ds.authentication_request_type:
      type: string
      enum:
        - PAYMENT_TRANSACTION
        - RECURRING_TRANSACTION
        - INSTALMENT_TRANSACTION
        - ADD_CARD
        - MAINTAIN_CARD
        - CARDHOLDER_VERIFICATION
      description: |
        Indicates the type of channel used to initiate the transaction.
          * `PAYMENT_TRANSACTION`
          * `RECURRING_TRANSACTION`
          * `INSTALMENT_TRANSACTION`
          * `ADD_CARD`
          * `MAINTAIN_CARD`
          * `CARDHOLDER_VERIFICATION`
      minLength: 1
      maxLength: 50
      example: PAYMENT_TRANSACTION
    acs_decoupled_response_indicator_AUTHENTICATIONS.three_ds.acs_decoupled_response_indicator:
      type: array
      description: |
        Indicates whether the ACS will utilise Decoupled Authentication to authenticate the Cardholder.
           * `DECOUPLED_AUTHENTICATION_UTILISED`
           * `DECOUPLED_AUTHENTICATION_NOT_UTILISED`
      items:
        type: string
        enum:
          - DECOUPLED_AUTHENTICATION_UTILISED
          - DECOUPLED_AUTHENTICATION_NOT_UTILISED
      example:
        - DECOUPLED_AUTHENTICATION_UTILISED
    whitelist_status_AUTHENTICATIONS.three_ds.whitelist_status:
      type: string
      enum:
        - WHITELISTED_BY_CARDHOLDER
        - NOT_WHITELISTED_BY_CARDHOLDER
        - NOT_ELIGIBLE
        - PENDING_CARDHOLDER_CONFIRMATION
        - REJECTED_BY_CARDHOLDER
        - WHITELIST_STATUS_UNKNOWN
      description: |
        Enables the communication of trusted beneficiary/whitelist status between the ACS, the DS and the 3DS Requestor (Merchant).
            * `WHITELISTED_BY_CARDHOLDER`
            * `NOT_WHITELISTED_BY_CARDHOLDER`
            * `NOT_ELIGIBLE`
            * `PENDING_CARDHOLDER_CONFIRMATION`
            * `REJECTED_BY_CARDHOLDER`
            * `WHITELIST_STATUS_UNKNOWN`
      minLength: 1
      maxLength: 50
      example: WHITELISTED_BY_CARDHOLDER
    single_response:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id_AUTHENTICATIONS.id'
        time_created:
          $ref: '#/components/schemas/time_created_AUTHENTICATIONS.time_created'
        status:
          $ref: '#/components/schemas/status_AUTHENTICATIONS.status'
        merchant_id:
          $ref: '#/components/schemas/merchant_id_AUTHENTICATIONS.merchant_id'
        merchant_name:
          $ref: '#/components/schemas/merchant_name_AUTHENTICATIONS.merchant_name'
        account_id:
          $ref: '#/components/schemas/account_id_AUTHENTICATIONS.account_id'
        account_name:
          $ref: '#/components/schemas/account_name_AUTHENTICATIONS.account_name'
        channel:
          $ref: '#/components/schemas/channel_AUTHENTICATIONS.channel'
        amount:
          $ref: '#/components/schemas/amount_AUTHENTICATIONS.amount'
        currency:
          $ref: '#/components/schemas/currency_AUTHENTICATIONS.currency'
        country:
          $ref: '#/components/schemas/country_AUTHENTICATIONS.country'
        source:
          $ref: '#/components/schemas/source_AUTHENTICATIONS.source'
        payment_method:
          type: object
          properties:
            result:
              $ref: '#/components/schemas/result_AUTHENTICATIONS.payment_method.result'
            message:
              $ref: '#/components/schemas/message_AUTHENTICATIONS.payment_method.message'
            entry_mode:
              $ref: '#/components/schemas/entry_mode_AUTHENTICATIONS.payment_method.entry_mode'
            fingerprint:
              $ref: '#/components/schemas/fingerprint_AUTHENTICATIONS.payment_method.fingerprint'
            fingerprint_presence_indicator:
              $ref: '#/components/schemas/fingerprint_presence_indicator_AUTHENTICATIONS.payment_method.fingerprint_presence_indicator'
            name:
              $ref: '#/components/schemas/name_AUTHENTICATIONS.payment_method.name'
            card:
              type: object
              properties:
                funding:
                  $ref: '#/components/schemas/funding_AUTHENTICATIONS.payment_method.card.funding'
                brand:
                  $ref: '#/components/schemas/brand_AUTHENTICATIONS.payment_method.card.brand'
                authcode:
                  $ref: '#/components/schemas/authcode_AUTHENTICATIONS.payment_method.card.authcode'
                brand_reference:
                  $ref: '#/components/schemas/brand_reference_AUTHENTICATIONS.payment_method.card.brand_reference'
                masked_number_first6last4:
                  $ref: '#/components/schemas/masked_number_first6last4_AUTHENTICATIONS.payment_method.card.masked_number_first6last4'
                cvv_indicator:
                  $ref: '#/components/schemas/cvv_indicator_AUTHENTICATIONS.payment_method.card.cvv_indicator'
                cvv_result:
                  $ref: '#/components/schemas/cvv_result_AUTHENTICATIONS.payment_method.card.cvv_result'
                avs_address_result:
                  $ref: '#/components/schemas/avs_address_result_AUTHENTICATIONS.payment_method.card.avs_address_result'
                avs_postal_code_result:
                  $ref: '#/components/schemas/avs_postal_code_result_AUTHENTICATIONS.payment_method.card.avs_postal_code_result'
            three_ds:
              type: object
              properties:
                acs_trans_ref:
                  $ref: '#/components/schemas/acs_trans_ref_AUTHENTICATIONS.three_ds.acs_trans_ref'
                ds_trans_ref:
                  $ref: '#/components/schemas/ds_trans_ref_AUTHENTICATIONS.three_ds.ds_trans_ref'
                server_trans_ref:
                  $ref: '#/components/schemas/server_trans_ref_AUTHENTICATIONS.three_ds.server_trans_ref'
                liability_shift:
                  $ref: '#/components/schemas/liability_shift_AUTHENTICATIONS.three_ds.liability_shift'
                value:
                  $ref: '#/components/schemas/authentication_value_AUTHENTICATIONS.three_ds.authentication_value'
                eci:
                  $ref: '#/components/schemas/eci_AUTHENTICATIONS.three_ds.eci'
                status:
                  $ref: '#/components/schemas/status_AUTHENTICATIONS.three_ds.status'
                status_reason:
                  $ref: '#/components/schemas/status_reason_AUTHENTICATIONS.three_ds.status_reason'
                message_category:
                  $ref: '#/components/schemas/message_category_AUTHENTICATIONS.three_ds.message_category'
                message_version:
                  $ref: '#/components/schemas/message_version_AUTHENTICATIONS.three_ds.message_version'
                challenge_status:
                  $ref: '#/components/schemas/challenge_status_AUTHENTICATIONS.three_ds.challenge_status'
        action_create_id:
          $ref: '#/components/schemas/action_create_id_AUTHENTICATIONS.action_create_id'
        system:
          type: object
          properties:
            mid:
              $ref: '#/components/schemas/mid_AUTHENTICATIONS.system.mid'
            tid:
              $ref: '#/components/schemas/tid_AUTHENTICATIONS.system.tid'
            name:
              $ref: '#/components/schemas/name_AUTHENTICATIONS.system.name'
        action:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/id_AUTHENTICATIONS.action.id'
            type:
              $ref: '#/components/schemas/type_AUTHENTICATIONS.action.type'
            time_created:
              $ref: '#/components/schemas/time_created_AUTHENTICATIONS.action.time_created'
            result_code:
              $ref: '#/components/schemas/result_code_ACTIONS.result_code'
            app_id:
              $ref: '#/components/schemas/app_id_AUTHENTICATIONS.action.app_id'
            app_name:
              $ref: '#/components/schemas/app_name_AUTHENTICATIONS.action.app_name'
      x-examples:
        Example 1:
          id: ''
          time_created: ''
          status: ''
          merchant_id: ''
          merchant_name: ''
          account_id: ''
          account_name: ''
          channel: ''
          amount: ''
          currency: ''
          country: ''
          source: ''
          payment_method:
            result: ''
            message: ''
            entry_mode: ''
            fingerprint: ''
            fingerprint_presence_indicator: ''
            name: Jane
            card:
              funding: ''
              brand: ''
              authcode: ''
              brand_reference: ''
              masked_number_first6last4: ''
              cvv_indicator: ''
              cvv_result: ''
              avs_address_result: ''
              avs_postal_code_result: ''
            three_ds:
              acs_trans_ref: ''
              ds_trans_ref: ''
              server_trans_ref: ''
              liability_shift: ''
              value: ''
              eci: ''
              status: ''
              status_reason: ''
              message_category: ''
              message_version: ''
              challenge_status: ''
          action_create_id: ''
          system:
            mid: ''
            tid: ''
            name: ''
          action:
            id: ''
            type: ''
            time_created: ''
            result_code: ''
            app_id: ''
            app_name: ''
    result_code_ACTIONS.result_code:
      type: string
      description: |
        The result code of the action.
          * `SUCCESS` - Indicates the action was executed as expected and the action successful.
          * `DECLINED ` - Indicates the action was executed as expected  but the action was unsuccessful.
          * `PENDING ` - Indicates the action was executed as expected and the final result is not yet known.
          * `ERROR` -  Indicates the action was not executed as there is an error.
      example: SUCCESS
    objRequestInvalid_400:
      type: object
      description: Bad Request
      properties:
        error_code:
          type: string
          enum:
            - DUPLICATE_TRANSACTION
            - INVALID_BATCH_ACTION
            - INVALID_REQUEST_DATA
            - INVALID_TRANSACTION_ACTION
            - MANDATORY_DATA_MISSING
            - TRANSACTION_NOT_FOUND
          description: This indicates an issue with the API request.
          example: MANDATORY_DATA_MISSING
        detailed_error_code:
          type: string
          enum:
            - '40016'
          description: Unique reference to identify the error.
          example: '40016'
        detailed_error_description:
          type: string
          description: Unique Text describing the specific error.
          example: Bad track data
    AuthenticationInvalid_401:
      type: object
      description: Not Authenticated
      properties:
        error_code:
          type: string
          enum:
            - NOT_AUTHENTICATED
          description: This action failed as token in the request is not valid.
          example: NOT_AUTHENTICATED
        detailed_error_code:
          type: string
          enum:
            - '40001'
            - '40002'
          description: Unique reference to identify the error.
          example: '40001'
        detailed_error_description:
          type: string
          description: Unique Text describing the specific error.
          example: Invalid Access Token
    NotAuthorized_403:
      type: object
      description: Forbidden
      properties:
        error_code:
          type: string
          enum:
            - ACTION_NOT_AUTHORIZED
          description: This action is not authorized with the credentials being used.
          example: ACTION_NOT_AUTHORIZED
        detailed_error_code:
          type: string
          enum:
            - '40003'
            - '40004'
          description: Unique reference to identify the error.
          example: '40003'
        detailed_error_description:
          type: string
          description: Unique Text describing the specific error.
          example: Permission not enabled to execute action
    ServerError_500:
      type: object
      description: Internal Server Error
      properties:
        error_code:
          type: string
          enum:
            - SYSTEM_ERROR_DOWNSTREAM
          description: This indicates an unexpected issue occurred on the Global Payments system.
          example: SYSTEM_ERROR_DOWNSTREAM
        detailed_error_code:
          type: string
          enum:
            - '50011'
          description: Unique reference to identify the error.
          example: '50011'
        detailed_error_description:
          type: string
          description: Unique Text describing the specific error.
          example: Processor Configuration error
    UnknownServerError_501:
      type: object
      description: Not implemented
      properties:
        error_code:
          type: string
          enum:
            - UNKNOWN_RESPONSE
          description: This is an error not yet handled or mapped properly.
          example: UNKNOWN_RESPONSE
        detailed_error_code:
          type: string
          enum:
            - '50012'
          description: Unique reference to identify the error.
          example: '50012'
        detailed_error_description:
          type: string
          description: 'Unique Text describing the specific error not yet handled.      '
    UnknownPlatformError_502:
      type: object
      description: Bad Gateway
      properties:
        error_code:
          type: string
          enum:
            - UNAUTHORIZED_DOWNSTREAM
          description: This is an error indicating there was an issue connecting to a partner system..
          example: UNAUTHORIZED_DOWNSTREAM
        detailed_error_code:
          type: string
          enum:
            - '50002'
          description: Unique reference to identify the error.
          example: '50002'
        detailed_error_description:
          type: string
          description: Authentication error—Verify and correct credentials.
    ServerTimeout_504:
      type: object
      description: Timeout
      properties:
        error_code:
          type: string
          enum:
            - TIMEOUT_DOWNSTREAM
          description: This is an error indicating there was a timeout issue to another  system.
          example: TIMEOUT_DOWNSTREAM
        detailed_error_code:
          type: string
          enum:
            - '50008'
          description: Unique reference to identify the error.
          example: '50008'
        detailed_error_description:
          type: string
          description: No response from payment method provider.
security:
  - bearerAuth: []
